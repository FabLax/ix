"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2986],{71268:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>K,contentTitle:()=>H,default:()=>$,frontMatter:()=>Y,metadata:()=>r,toc:()=>Q});const r=JSON.parse('{"id":"components/pie-chart/code","title":"code","description":"Development","source":"@site/docs/components/pie-chart/code.mdx","sourceDirName":"components/pie-chart","slug":"/components/pie-chart/code","permalink":"/version-alpha/docs/components/pie-chart/code","draft":false,"unlisted":false,"editUrl":"https://github.com/siemens/ix/tree/main/packages/documentation/docs/components/pie-chart/code.mdx","tags":[],"version":"current","frontMatter":{}}');var s=t(65723),o=t(65598),c=t(89403);function a(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import './echarts-pie.scoped.css';\n\nimport { useEffect, useState } from 'react';\nimport { getComputedCSSProperty, registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport ReactEcharts from 'echarts-for-react';\nimport * as echarts from 'echarts/core';\nimport { EChartsOption } from 'echarts';\n\nexport default function EchartsPie() {\n  registerTheme(echarts);\n\n  const [theme, setTheme] = useState(themeSwitcher.getCurrentTheme());\n\n  useEffect(() => {\n    themeSwitcher.themeChanged.on((theme: string) => {\n      setTheme(theme);\n    });\n  }, []);\n\n  const data = [\n    { value: 29.4, name: 'China' },\n    { value: 14.3, name: 'U.S' },\n    { value: 9.8, name: 'EEA' },\n    { value: 6.8, name: 'India' },\n    { value: 4.9, name: 'Russia' },\n    { value: 3.5, name: 'Japan' },\n    { value: 31.5, name: 'Other' },\n  ];\n\n  const options: EChartsOption = {\n    tooltip: {\n      trigger: 'item',\n    },\n    legend: {\n      icon: 'rect',\n      bottom: '0',\n      left: '0',\n    },\n    series: [\n      {\n        name: 'CO2 emissions from<',\n        type: 'pie',\n        radius: '80%',\n        data: data,\n        label: {\n          show: true,\n          color: getComputedCSSProperty('color-neutral'),\n        },\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(0, 0, 0, 0.5)',\n          },\n        },\n      },\n    ],\n  };\n\n  return (\n    <ReactEcharts\n      style={{ height: '40rem' }}\n      option={options}\n      theme={theme}\n      className=\"echarts\"\n    />\n  );\n}\n"})})}function i(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}function h(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}function p(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { Component, OnInit } from '@angular/core';\nimport { getComputedCSSProperty, registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport * as echarts from 'echarts/core';\nimport { EChartsOption } from 'echarts';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './echarts-pie.html',\n  styleUrls: ['./echarts-pie.css'],\n})\nexport default class EchartsPie implements OnInit {\n  theme = themeSwitcher.getCurrentTheme();\n\n  data = [\n    { value: 29.4, name: 'China' },\n    { value: 14.3, name: 'U.S' },\n    { value: 9.8, name: 'EEA' },\n    { value: 6.8, name: 'India' },\n    { value: 4.9, name: 'Russia' },\n    { value: 3.5, name: 'Japan' },\n    { value: 31.5, name: 'Other' },\n  ];\n\n  options: EChartsOption = {\n    tooltip: {\n      trigger: 'item',\n    },\n    legend: {\n      icon: 'rect',\n      bottom: '0',\n      left: '0',\n    },\n    series: [\n      {\n        name: 'CO2 emissions from<',\n        type: 'pie',\n        radius: '80%',\n        data: this.data,\n        label: {\n          show: true,\n          color: getComputedCSSProperty('color-neutral'),\n        },\n        emphasis: {\n          itemStyle: {\n            shadowBlur: 10,\n            shadowOffsetX: 0,\n            shadowColor: 'rgba(0, 0, 0, 0.5)',\n          },\n        },\n      },\n    ],\n  };\n\n  ngOnInit() {\n    registerTheme(echarts);\n\n    themeSwitcher.themeChanged.on((theme: string) => {\n      this.theme = theme;\n    });\n  }\n}\n"})})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}function d(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<div\n  echarts\n  [options]="options"\n  [theme]="theme"\n  class="echarts"\n></div>\n'})})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}function g(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function f(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(g,{...e})}):g(e)}function C(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-vue",children:"<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport { getComputedCSSProperty, registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport VueECharts from 'vue-echarts';\nimport * as echarts from 'echarts/core';\nimport * as charts from 'echarts/charts';\nimport * as components from 'echarts/components';\nimport * as renderer from 'echarts/renderers';\nimport { EChartsOption } from 'echarts';\n\necharts.use([\n  components.TooltipComponent,\n  components.LegendComponent,\n  components.GridComponent,\n  components.MarkLineComponent,\n  charts.PieChart,\n  renderer.CanvasRenderer,\n]);\n\nregisterTheme(echarts);\n\nconst theme = ref(themeSwitcher.getCurrentTheme());\n\nthemeSwitcher.themeChanged.on((newTheme: string) => {\n  theme.value = newTheme;\n});\n\nconst data = [\n  { value: 29.4, name: 'China' },\n  { value: 14.3, name: 'U.S' },\n  { value: 9.8, name: 'EEA' },\n  { value: 6.8, name: 'India' },\n  { value: 4.9, name: 'Russia' },\n  { value: 3.5, name: 'Japan' },\n  { value: 31.5, name: 'Other' },\n];\n\nconst options: EChartsOption = {\n  tooltip: {\n    trigger: 'item',\n  },\n  legend: {\n    icon: 'rect',\n    bottom: '0',\n    left: '0',\n  },\n  series: [\n    {\n      name: 'CO2 emissions from<',\n      type: 'pie',\n      radius: '80%',\n      data: data,\n      label: {\n        show: true,\n        color: getComputedCSSProperty('color-neutral'),\n      },\n      emphasis: {\n        itemStyle: {\n          shadowBlur: 10,\n          shadowOffsetX: 0,\n          shadowColor: 'rgba(0, 0, 0, 0.5)',\n        },\n      },\n    },\n  ],\n} as EChartsOption;\n<\/script>\n\n<style scoped src=\"./echarts-pie.css\"></style>\n\n<template>\n  <VueECharts :theme=\"theme\" :option=\"options\" autoresize></VueECharts>\n</template>\n"})})}function x(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(C,{...e})}):C(e)}function v(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function w(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(v,{...e})}):v(e)}function j(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ECharts pie example</title>\n    <link rel=\"stylesheet\" href=\"./echarts-pie.css\" />\n    \n    <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.4.1/dist/echarts.min.js\"><\/script>\n    \n  </head>\n  <body class=\"theme-classic-dark\">\n    <div id=\"main\" class=\"echarts\"></div>\n\n    <script type=\"module\">\n      import {\n        getComputedCSSProperty,\n        registerTheme,\n      } from '@siemens/ix-echarts';\n      import { themeSwitcher } from '@siemens/ix';\n\n      function initChart(theme, options) {\n        var myChart = echarts.init(document.querySelector('#main'), theme);\n        myChart.setOption(options);\n\n        return myChart;\n      }\n\n      const data = [\n        { value: 29.4, name: 'China' },\n        { value: 14.3, name: 'U.S' },\n        { value: 9.8, name: 'EEA' },\n        { value: 6.8, name: 'India' },\n        { value: 4.9, name: 'Russia' },\n        { value: 3.5, name: 'Japan' },\n        { value: 31.5, name: 'Other' },\n      ];\n\n      const options = {\n        tooltip: {\n          trigger: 'item',\n        },\n        legend: {\n          icon: 'rect',\n          bottom: '0',\n          left: '0',\n        },\n        series: [\n          {\n            name: 'CO2 emissions from<',\n            type: 'pie',\n            radius: '80%',\n            data: data,\n            label: {\n              show: true,\n              color: getComputedCSSProperty('color-neutral'),\n            },\n            emphasis: {\n              itemStyle: {\n                shadowBlur: 10,\n                shadowOffsetX: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)',\n              },\n            },\n          },\n        ],\n      };\n\n      // providing echarts is in this case optional\n      registerTheme(echarts);\n\n      var myChart = initChart(themeSwitcher.getCurrentTheme(), options);\n\n      themeSwitcher.themeChanged.on((theme) => {\n        myChart.dispose();\n        myChart = initChart(theme, options);\n      });\n\n      window.onresize = function () {\n        myChart.resize();\n      };\n    <\/script>\n\n    <script type=\"module\" src=\"./init.js\"><\/script>\n  </body>\n</html>\n"})})}function S(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(j,{...e})}):j(e)}function y(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function O(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(y,{...e})}):y(e)}function R(e){return(0,s.jsx)(c.A,{name:"echarts-pie",source:{react:{"echarts-pie.tsx":i,"echarts-pie.scoped.css":m},angular:{"echarts-pie.ts":l,"echarts-pie.html":u,"echarts-pie.css":f},vue:{"echarts-pie.vue":x,"echarts-pie.css":w},html:{"echarts-pie.html":S,"echarts-pie.css":O}},files:{react:{"echarts-pie.tsx":"react/echarts-pie.tsx","echarts-pie.scoped.css":"react/echarts-pie.scoped.css"},angular:{"echarts-pie.ts":"angular/echarts-pie.ts","echarts-pie.html":"angular/echarts-pie.html","echarts-pie.css":"angular/echarts-pie.css"},vue:{"echarts-pie.vue":"vue/echarts-pie.vue","echarts-pie.css":"vue/echarts-pie.css"},html:{"echarts-pie.html":"html/echarts-pie.html","echarts-pie.css":"html/echarts-pie.css"}},height:e.height,onlyFramework:e.onlyFramework})}function E(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(R,{...e})}):R(e)}function b(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import './echarts-circle.scoped.css';\n\nimport { useEffect, useState } from 'react';\nimport { getComputedCSSProperty, registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport ReactEcharts from 'echarts-for-react';\nimport * as echarts from 'echarts/core';\nimport { EChartsOption } from 'echarts';\n\nexport default function EchartsCircle() {\n  registerTheme(echarts);\n\n  const [theme, setTheme] = useState(themeSwitcher.getCurrentTheme());\n\n  useEffect(() => {\n    themeSwitcher.themeChanged.on((theme: string) => {\n      setTheme(theme);\n    });\n  }, []);\n\n  const data = [\n    { value: 72.17, name: 'Windows' },\n    { value: 15.42, name: 'macOS' },\n    { value: 4.03, name: 'Linux' },\n    { value: 2.27, name: 'Chrome OS' },\n    { value: 6.11, name: 'Other' },\n  ];\n\n  const options: EChartsOption = {\n    tooltip: {\n      trigger: 'item',\n    },\n    legend: {\n      icon: 'rect',\n      bottom: '0',\n      left: '0',\n    },\n    series: [\n      {\n        name: 'OS Share',\n        type: 'pie',\n        radius: ['60%', '90%'],\n        label: {\n          show: true,\n          color: getComputedCSSProperty('color-neutral'),\n        },\n        emphasis: {\n          label: {\n            show: true,\n            fontSize: 25,\n            fontWeight: 'bold',\n          },\n        },\n        labelLine: {\n          show: true,\n        },\n        data: data,\n      },\n    ],\n  };\n\n  return (\n    <ReactEcharts\n      style={{ height: '40rem' }}\n      option={options}\n      theme={theme}\n      className=\"echarts\"\n    />\n  );\n}\n"})})}function T(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(b,{...e})}):b(e)}function N(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function P(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(N,{...e})}):N(e)}function k(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { Component, OnInit } from '@angular/core';\nimport { getComputedCSSProperty, registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport * as echarts from 'echarts/core';\nimport { EChartsOption } from 'echarts';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './echarts-circle.html',\n  styleUrls: ['./echarts-circle.css'],\n})\nexport default class EchartsCircle implements OnInit {\n  theme = themeSwitcher.getCurrentTheme();\n\n  data = [\n    { value: 72.17, name: 'Windows' },\n    { value: 15.42, name: 'macOS' },\n    { value: 4.03, name: 'Linux' },\n    { value: 2.27, name: 'Chrome OS' },\n    { value: 6.11, name: 'Other' },\n  ];\n\n  options: EChartsOption = {\n    tooltip: {\n      trigger: 'item',\n    },\n    legend: {\n      icon: 'rect',\n      bottom: '0',\n      left: '0',\n    },\n    series: [\n      {\n        name: 'OS Share',\n        type: 'pie',\n        radius: ['60%', '90%'],\n        label: {\n          show: true,\n          color: getComputedCSSProperty('color-neutral'),\n        },\n        emphasis: {\n          label: {\n            show: true,\n            fontSize: 25,\n            fontWeight: 'bold',\n          },\n        },\n        labelLine: {\n          show: true,\n        },\n        data: this.data,\n      },\n    ],\n  };\n\n  ngOnInit() {\n    registerTheme(echarts);\n\n    themeSwitcher.themeChanged.on((theme: string) => {\n      this.theme = theme;\n    });\n  }\n}\n"})})}function L(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(k,{...e})}):k(e)}function U(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<div\n  echarts\n  [options]="options"\n  [theme]="theme"\n  class="echarts"\n></div>\n'})})}function z(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(U,{...e})}):U(e)}function D(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function I(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(D,{...e})}):D(e)}function W(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-vue",children:"<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport { getComputedCSSProperty, registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport VueECharts from 'vue-echarts';\nimport * as echarts from 'echarts/core';\nimport * as charts from 'echarts/charts';\nimport * as components from 'echarts/components';\nimport * as renderer from 'echarts/renderers';\nimport { EChartsOption } from 'echarts';\n\necharts.use([\n  components.TooltipComponent,\n  components.LegendComponent,\n  components.GridComponent,\n  components.MarkLineComponent,\n  charts.PieChart,\n  renderer.CanvasRenderer,\n]);\n\nregisterTheme(echarts);\n\nconst theme = ref(themeSwitcher.getCurrentTheme());\n\nthemeSwitcher.themeChanged.on((newTheme: string) => {\n  theme.value = newTheme;\n});\n\nconst data = [\n  { value: 72.17, name: 'Windows' },\n  { value: 15.42, name: 'macOS' },\n  { value: 4.03, name: 'Linux' },\n  { value: 2.27, name: 'Chrome OS' },\n  { value: 6.11, name: 'Other' },\n];\n\nconst options: EChartsOption = {\n  tooltip: {\n    trigger: 'item',\n  },\n  legend: {\n    icon: 'rect',\n    bottom: '0',\n    left: '0',\n  },\n  series: [\n    {\n      name: 'OS Share',\n      type: 'pie',\n      radius: ['60%', '90%'],\n      label: {\n        show: true,\n        color: getComputedCSSProperty('color-neutral'),\n      },\n      emphasis: {\n        label: {\n          show: true,\n          fontSize: 25,\n          fontWeight: 'bold',\n        },\n      },\n      labelLine: {\n        show: true,\n      },\n      data: data,\n    },\n  ],\n} as EChartsOption;\n<\/script>\n\n<style scoped src=\"./echarts-circle.css\"></style>\n\n<template>\n  <VueECharts :theme=\"theme\" :option=\"options\" autoresize></VueECharts>\n</template>\n"})})}function F(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(W,{...e})}):W(e)}function A(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function B(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(A,{...e})}):A(e)}function V(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ECharts circle example</title>\n    <link rel=\"stylesheet\" href=\"./echarts-circle.css\" />\n    \n    <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.4.1/dist/echarts.min.js\"><\/script>\n    \n  </head>\n  <body class=\"theme-classic-dark\">\n    <div id=\"main\" class=\"echarts\"></div>\n\n    <script type=\"module\">\n      import {\n        getComputedCSSProperty,\n        registerTheme,\n      } from '@siemens/ix-echarts';\n      import { themeSwitcher } from '@siemens/ix';\n\n      function initChart(theme, options) {\n        var myChart = echarts.init(document.querySelector('#main'), theme);\n        myChart.setOption(options);\n\n        return myChart;\n      }\n\n      const data = [\n        { value: 72.17, name: 'Windows' },\n        { value: 15.42, name: 'macOS' },\n        { value: 4.03, name: 'Linux' },\n        { value: 2.27, name: 'Chrome OS' },\n        { value: 6.11, name: 'Other' },\n      ];\n\n      const options = {\n        tooltip: {\n          trigger: 'item',\n        },\n        legend: {\n          icon: 'rect',\n          bottom: '0',\n          left: '0',\n        },\n        series: [\n          {\n            name: 'OS Share',\n            type: 'pie',\n            radius: ['60%', '90%'],\n            label: {\n              show: true,\n              color: getComputedCSSProperty('color-neutral'),\n            },\n            emphasis: {\n              label: {\n                show: true,\n                fontSize: 25,\n                fontWeight: 'bold',\n              },\n            },\n            labelLine: {\n              show: true,\n            },\n            data: data,\n          },\n        ],\n      };\n\n      // providing echarts is in this case optional\n      registerTheme(echarts);\n\n      var myChart = initChart(themeSwitcher.getCurrentTheme(), options);\n\n      themeSwitcher.themeChanged.on((theme) => {\n        myChart.dispose();\n        myChart = initChart(theme, options);\n      });\n\n      window.onresize = function () {\n        myChart.resize();\n      };\n    <\/script>\n\n    <script type=\"module\" src=\"./init.js\"><\/script>\n  </body>\n</html>\n"})})}function J(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(V,{...e})}):V(e)}function M(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function X(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(M,{...e})}):M(e)}function q(e){return(0,s.jsx)(c.A,{name:"echarts-circle",source:{react:{"echarts-circle.tsx":T,"echarts-circle.scoped.css":P},angular:{"echarts-circle.ts":L,"echarts-circle.html":z,"echarts-circle.css":I},vue:{"echarts-circle.vue":F,"echarts-circle.css":B},html:{"echarts-circle.html":J,"echarts-circle.css":X}},files:{react:{"echarts-circle.tsx":"react/echarts-circle.tsx","echarts-circle.scoped.css":"react/echarts-circle.scoped.css"},angular:{"echarts-circle.ts":"angular/echarts-circle.ts","echarts-circle.html":"angular/echarts-circle.html","echarts-circle.css":"angular/echarts-circle.css"},vue:{"echarts-circle.vue":"vue/echarts-circle.vue","echarts-circle.css":"vue/echarts-circle.css"},html:{"echarts-circle.html":"html/echarts-circle.html","echarts-circle.css":"html/echarts-circle.css"}},height:e.height,onlyFramework:e.onlyFramework})}function G(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(q,{...e})}):q(e)}const Y={},H=void 0,K={},Q=[{value:"Development",id:"development",level:2},{value:"Basic",id:"basic",level:3},{value:"Donut charts",id:"donut-charts",level:3}];function Z(e){const n={h2:"h2",h3:"h3",p:"p",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,s.jsx)(n.h3,{id:"basic",children:"Basic"}),"\n",(0,s.jsx)(E,{height:"40rem"}),"\n",(0,s.jsx)(n.h3,{id:"donut-charts",children:"Donut charts"}),"\n",(0,s.jsx)(n.p,{children:"Donut charts are a variation of pie charts that have a hole in the center. Donut charts are often used to display the same information as a pie chart, but additional information can be displayed in the center of the chart."}),"\n",(0,s.jsx)(G,{height:"40rem"})]})}function $(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(Z,{...e})}):Z(e)}}}]);