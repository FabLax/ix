"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[5153,9307],{4763:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>_,contentTitle:()=>M,default:()=>$,frontMatter:()=>B,metadata:()=>r,toc:()=>F});const r=JSON.parse('{"id":"components/tree/code","title":"code","description":"Development","source":"@site/docs/components/tree/code.mdx","sourceDirName":"components/tree","slug":"/components/tree/code","permalink":"/version-alpha/docs/components/tree/code","draft":false,"unlisted":false,"editUrl":"https://github.com/siemens/ix/tree/main/packages/documentation/docs/components/tree/code.mdx","tags":[],"version":"current","frontMatter":{}}');var i=t(65723),a=t(65598),o=t(34197),l=(t(17787),t(61838));function s(e){const n={h3:"h3",h4:"h4",...(0,a.R)(),...e.components};return l.A||c("ApiTable",!1),l.A.Code||c("ApiTable.Code",!0),l.A.EventHeader||c("ApiTable.EventHeader",!0),l.A.PropertyHeader||c("ApiTable.PropertyHeader",!0),l.A.Text||c("ApiTable.Text",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"api-for-ix-tree",children:"API for ix-tree"}),"\n",(0,i.jsx)(n.h4,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(l.A,{id:"property-context",children:[(0,i.jsx)(l.A.PropertyHeader,{name:"context",singleFramework:""}),(0,i.jsx)(l.A.Text,{name:"Description",children:"Selection and collapsed state management"}),(0,i.jsx)(l.A.Code,{name:"Type",children:"{ [x: string]: TreeItemContext; }"}),(0,i.jsx)(l.A.Code,{name:"Default",children:"{}"})]}),"\n",(0,i.jsxs)(l.A,{id:"property-model",children:[(0,i.jsx)(l.A.PropertyHeader,{name:"model",singleFramework:""}),(0,i.jsx)(l.A.Text,{name:"Description",children:"Tree model"}),(0,i.jsx)(l.A.Code,{name:"Type",children:"{ [x: string]: TreeItem<any>; }"}),(0,i.jsx)(l.A.Code,{name:"Default",children:"{}"})]}),"\n",(0,i.jsxs)(l.A,{id:"property-renderItem",children:[(0,i.jsx)(l.A.PropertyHeader,{name:"renderItem",singleFramework:""}),(0,i.jsx)(l.A.Text,{name:"Description",children:"Render function of tree items"}),(0,i.jsx)(l.A.Code,{name:"Type",children:"<T = any>(index: number, data: T, dataList: T[], context: TreeContext, update: (callback: UpdateCallback) => void) => HTMLElement"})]}),"\n",(0,i.jsxs)(l.A,{id:"property-root",children:[(0,i.jsx)(l.A.PropertyHeader,{name:"root",singleFramework:""}),(0,i.jsx)(l.A.Text,{name:"Description",children:"Initial root element will not be rendered"}),(0,i.jsx)(l.A.Code,{name:"Attribute",children:"root"}),(0,i.jsx)(l.A.Code,{name:"Type",children:"string"})]}),"\n",(0,i.jsx)(n.h4,{id:"events",children:"Events"}),"\n",(0,i.jsxs)(l.A,{id:"event-contextChange",children:[(0,i.jsx)(l.A.EventHeader,{name:"contextChange"}),(0,i.jsx)(l.A.Text,{name:"Description",children:"Context changed"}),(0,i.jsx)(l.A.Code,{name:"Event",children:"contextChange"}),(0,i.jsx)(l.A.Code,{name:"Detail",children:"{ [x: string]: TreeItemContext; }"})]}),"\n",(0,i.jsxs)(l.A,{id:"event-nodeClicked",children:[(0,i.jsx)(l.A.EventHeader,{name:"nodeClicked",children:(0,i.jsx)(o.df,{message:"1.5.0"})}),(0,i.jsx)(l.A.Text,{name:"Description",children:"Node clicked event"}),(0,i.jsx)(l.A.Code,{name:"Event",children:"nodeClicked"}),(0,i.jsx)(l.A.Code,{name:"Detail",children:"string"})]}),"\n",(0,i.jsxs)(l.A,{id:"event-nodeRemoved",children:[(0,i.jsx)(l.A.EventHeader,{name:"nodeRemoved"}),(0,i.jsx)(l.A.Text,{name:"Description",children:"Emits removed nodes"}),(0,i.jsx)(l.A.Code,{name:"Event",children:"nodeRemoved"}),(0,i.jsx)(l.A.Code,{name:"Detail",children:"any"})]}),"\n",(0,i.jsxs)(l.A,{id:"event-nodeToggled",children:[(0,i.jsx)(l.A.EventHeader,{name:"nodeToggled",children:(0,i.jsx)(o.df,{message:"1.5.0"})}),(0,i.jsx)(l.A.Text,{name:"Description",children:"Node toggled event"}),(0,i.jsx)(l.A.Code,{name:"Event",children:"nodeToggled"}),(0,i.jsx)(l.A.Code,{name:"Detail",children:"{ id: string; isExpaned: boolean; }"})]})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(s,{...e})}):s(e)}function c(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}function m(e){const n={h3:"h3",h4:"h4",...(0,a.R)(),...e.components};return l.A||h("ApiTable",!1),l.A.Code||h("ApiTable.Code",!0),l.A.EventHeader||h("ApiTable.EventHeader",!0),l.A.PropertyHeader||h("ApiTable.PropertyHeader",!0),l.A.Text||h("ApiTable.Text",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"api-for-ix-tree-item",children:"API for ix-tree-item"}),"\n",(0,i.jsx)(n.h4,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(l.A,{id:"property-context",children:[(0,i.jsx)(l.A.PropertyHeader,{name:"context",singleFramework:""}),(0,i.jsx)(l.A.Text,{name:"Description",children:"Context"}),(0,i.jsx)(l.A.Code,{name:"Type",children:"TreeItemContext"})]}),"\n",(0,i.jsxs)(l.A,{id:"property-hasChildren",children:[(0,i.jsx)(l.A.PropertyHeader,{name:"hasChildren",singleFramework:""}),(0,i.jsx)(l.A.Text,{name:"Description",children:"Has tree item children"}),(0,i.jsx)(l.A.Code,{name:"Attribute",children:"has-children"}),(0,i.jsx)(l.A.Code,{name:"Type",children:"boolean"}),(0,i.jsx)(l.A.Code,{name:"Default",children:"false"})]}),"\n",(0,i.jsxs)(l.A,{id:"property-text",children:[(0,i.jsx)(l.A.PropertyHeader,{name:"text",singleFramework:""}),(0,i.jsx)(l.A.Text,{name:"Description",children:"Text"}),(0,i.jsx)(l.A.Code,{name:"Attribute",children:"text"}),(0,i.jsx)(l.A.Code,{name:"Type",children:"string"})]}),"\n",(0,i.jsx)(n.h4,{id:"events",children:"Events"}),"\n",(0,i.jsxs)(l.A,{id:"event-itemClick",children:[(0,i.jsx)(l.A.EventHeader,{name:"itemClick"}),(0,i.jsx)(l.A.Text,{name:"Description",children:"Click on item not on the expand&#x2F;collapse icon"}),(0,i.jsx)(l.A.Code,{name:"Event",children:"itemClick"}),(0,i.jsx)(l.A.Code,{name:"Detail",children:"void"})]}),"\n",(0,i.jsxs)(l.A,{id:"event-toggle",children:[(0,i.jsx)(l.A.EventHeader,{name:"toggle"}),(0,i.jsx)(l.A.Text,{name:"Description",children:"Expand&#x2F;Collapsed toggled"}),(0,i.jsx)(l.A.Code,{name:"Event",children:"toggle"}),(0,i.jsx)(l.A.Code,{name:"Detail",children:"void"})]})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}var x=t(89403);function u(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { TreeModel } from '@siemens/ix';\nimport { IxTree } from '@siemens/ix-react';\nimport { useState } from 'react';\n\ntype TreeData = {\n  name: string;\n};\n\nexport default () => {\n  const [model] = useState<TreeModel<TreeData>>({\n    root: {\n      id: 'root',\n      data: {\n        name: '',\n      },\n      hasChildren: true,\n      children: ['sample'],\n    },\n    sample: {\n      id: 'sample',\n      data: {\n        name: 'Sample',\n      },\n      hasChildren: true,\n      children: ['sample-child-1', 'sample-child-2'],\n    },\n    'sample-child-1': {\n      id: 'sample-child-1',\n      data: {\n        name: 'Sample Child 1',\n      },\n      hasChildren: false,\n      children: [],\n    },\n    'sample-child-2': {\n      id: 'sample-child-2',\n      data: {\n        name: 'Sample Child 2',\n      },\n      hasChildren: false,\n      children: [],\n    },\n  });\n  return (\n    <div\n      style={{\n        display: 'block',\n        position: 'relative',\n        width: '100%',\n        height: '40rem',\n      }}\n    >\n      <IxTree root=\"root\" model={model}></IxTree>\n    </div>\n  );\n};\n"})})}function f(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}function v(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { Component } from '@angular/core';\nimport { TreeModel } from '@siemens/ix';\n\n@Component({\n  selector: 'app-example',\n  template: ` <div class=\"example\">\n    <ix-tree root=\"root\" [model]=\"model\"></ix-tree>\n  </div>`,\n  styles: [\n    `\n      .example {\n        display: block;\n        position: relative;\n        height: 32rem;\n        width: 100%;\n      }\n    `,\n  ],\n})\nexport default class Tree {\n  model: TreeModel<{\n    name: string;\n  }> = {\n    root: {\n      id: 'root',\n      data: {\n        name: '',\n      },\n      hasChildren: true,\n      children: ['sample'],\n    },\n    sample: {\n      id: 'sample',\n      data: {\n        name: 'Sample',\n      },\n      hasChildren: true,\n      children: ['sample-child-1', 'sample-child-2'],\n    },\n    'sample-child-1': {\n      id: 'sample-child-1',\n      data: {\n        name: 'Sample Child 1',\n      },\n      hasChildren: false,\n      children: [],\n    },\n    'sample-child-2': {\n      id: 'sample-child-2',\n      data: {\n        name: 'Sample Child 2',\n      },\n      hasChildren: false,\n      children: [],\n    },\n  };\n}\n"})})}function j(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(v,{...e})}):v(e)}function g(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-vue",children:"<script setup lang=\"ts\">\nimport { TreeModel } from '@siemens/ix';\nimport { IxTree } from '@siemens/ix-vue';\nimport { onMounted, ref } from 'vue';\n\ntype TreeData = {\n  name: string;\n};\n\nconst model = ref<TreeModel<TreeData>>();\n\nonMounted(() => {\n  model.value = {\n    root: {\n      id: 'root',\n      data: {\n        name: '',\n      },\n      hasChildren: true,\n      children: ['sample'],\n    },\n    sample: {\n      id: 'sample',\n      data: {\n        name: 'Sample',\n      },\n      hasChildren: true,\n      children: ['sample-child-1', 'sample-child-2'],\n    },\n    'sample-child-1': {\n      id: 'sample-child-1',\n      data: {\n        name: 'Sample Child 1',\n      },\n      hasChildren: false,\n      children: [],\n    },\n    'sample-child-2': {\n      id: 'sample-child-2',\n      data: {\n        name: 'Sample Child 2',\n      },\n      hasChildren: false,\n      children: [],\n    },\n  };\n});\n<\/script>\n\n<template>\n  <div style=\"display: block; position: relative; width: 100%; height: 40rem\">\n    <IxTree root=\"root\" :model=\"model\"></IxTree>\n  </div>\n</template>\n"})})}function C(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(g,{...e})}):g(e)}function T(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Tree example</title>\n  </head>\n  <body>\n    <div style=\"height: 8rem; width: 100%\">\n      <ix-tree root=\"root\" id=\"tree\"></ix-tree>\n    </div>\n\n    <script>\n      (async function () {\n        await window.customElements.whenDefined('ix-tree');\n        const tree = document.getElementById('tree');\n\n        tree.model = {\n          root: {\n            id: 'root',\n            data: null,\n            hasChildren: true,\n            children: ['sample'],\n          },\n          sample: {\n            id: 'sample',\n            data: {\n              name: 'Sample',\n            },\n            hasChildren: true,\n            children: ['sample-child-1', 'sample-child-2'],\n          },\n          'sample-child-1': {\n            id: 'sample-child-1',\n            data: {\n              name: 'Sample Child 1',\n            },\n            hasChildren: false,\n            children: [],\n          },\n          'sample-child-2': {\n            id: 'sample-child-2',\n            data: {\n              name: 'Sample Child 2',\n            },\n            hasChildren: false,\n            children: [],\n          },\n        };\n      })();\n    <\/script>\n    <script type=\"module\" src=\"./init.js\"><\/script>\n  </body>\n</html>\n"})})}function A(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(T,{...e})}):T(e)}function y(e){return(0,i.jsx)(x.A,{name:"tree",source:{react:{"tree.tsx":f},angular:{"tree.ts":j},vue:{"tree.vue":C},html:{"tree.html":A}},files:{react:{"tree.tsx":"react/tree.tsx"},angular:{"tree.ts":"angular/tree.ts"},vue:{"tree.vue":"vue/tree.vue"},html:{"tree.html":"html/tree.html"}},height:e.height,onlyFramework:e.onlyFramework})}function b(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(y,{...e})}):y(e)}function w(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { TreeContext, TreeModel } from '@siemens/ix';\nimport { iconCut, iconPrint, iconStar } from '@siemens/ix-icons/icons';\nimport { IxButton, IxIcon, IxTree } from '@siemens/ix-react';\nimport { useState } from 'react';\n\ntype TreeData = {\n  name: string;\n  icon: string;\n};\n\nexport default () => {\n  const [context, setContext] = useState<TreeContext>();\n  const [model] = useState<TreeModel<TreeData>>({\n    root: {\n      id: 'root',\n      data: {\n        icon: '',\n        name: '',\n      },\n      hasChildren: true,\n      children: ['sample'],\n    },\n    sample: {\n      id: 'sample',\n      data: {\n        name: 'Sample',\n        icon: iconStar,\n      },\n      hasChildren: true,\n      children: ['sample-child-1', 'sample-child-2'],\n    },\n    'sample-child-1': {\n      id: 'sample-child-1',\n      data: {\n        name: 'Sample Child 1',\n        icon: iconCut,\n      },\n      hasChildren: false,\n      children: [],\n    },\n    'sample-child-2': {\n      id: 'sample-child-2',\n      data: {\n        name: 'Sample Child 2',\n        icon: iconPrint,\n      },\n      hasChildren: false,\n      children: [],\n    },\n  });\n\n  function expandAndSelect() {\n    setContext({\n      sample: {\n        isExpanded: true,\n        isSelected: false,\n      },\n      'sample-child-2': {\n        isSelected: true,\n        isExpanded: false,\n      },\n    });\n  }\n\n  return (\n    <div\n      style={{\n        display: 'block',\n        position: 'relative',\n        width: '100%',\n        height: '40rem',\n      }}\n    >\n      <IxButton\n        onClick={expandAndSelect}\n        ghost\n        style={{ marginBottom: '2rem' }}\n      >\n        Expand Tree\n      </IxButton>\n      <IxTree\n        root=\"root\"\n        model={model}\n        context={context}\n        onContextChange={({ detail }) => {\n          setContext(detail);\n        }}\n        renderItem={(data: TreeData) => (\n          <div\n            style={{\n              display: 'flex',\n              alignItems: 'center',\n            }}\n          >\n            <IxIcon\n              name={data.icon}\n              size=\"16\"\n              style={{\n                marginInlineEnd: '0.5rem',\n              }}\n            />\n            {data.name}\n          </div>\n        )}\n      ></IxTree>\n    </div>\n  );\n};\n"})})}function S(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(w,{...e})}):w(e)}function k(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { Component } from '@angular/core';\nimport { TreeContext, TreeModel } from '@siemens/ix';\n\ntype TreeData = {\n  name: string;\n  icon: string;\n};\n\n@Component({\n  selector: 'app-example',\n  styles: [\n    `\n      .example {\n        display: block;\n        position: relative;\n        height: 32rem;\n        width: 100%;\n      }\n    `,\n  ],\n  template: `<div class=\"example\">\n    <ix-button\n      id=\"expand\"\n      ghost\n      style=\"margin-bottom: 2rem\"\n      (click)=\"expandAndSelect()\"\n      >Expand Tree</ix-button\n    >\n    <ix-tree\n      root=\"root\"\n      [model]=\"model\"\n      [context]=\"context\"\n      [renderItem]=\"treeItem\"\n    ></ix-tree>\n    <ng-template #treeItem let-item>\n      <div style=\"display: flex; align-items: center\">\n        <ix-icon [name]=\"item.icon\" size=\"16\" style=\"margin-inline-end: 0.5rem\"></ix-icon>\n        {{ item.name }}\n      </div>\n    </ng-template>\n  </div>`,\n})\nexport default class TreeCustom {\n  context: TreeContext = {};\n  model: TreeModel<TreeData> = {\n    root: {\n      id: 'root',\n      data: {\n        icon: '',\n        name: '',\n      },\n      hasChildren: true,\n      children: ['sample'],\n    },\n    sample: {\n      id: 'sample',\n      data: {\n        name: 'Sample',\n        icon: 'star',\n      },\n      hasChildren: true,\n      children: ['sample-child-1', 'sample-child-2'],\n    },\n    'sample-child-1': {\n      id: 'sample-child-1',\n      data: {\n        name: 'Sample Child 1',\n        icon: 'cut',\n      },\n      hasChildren: false,\n      children: [],\n    },\n    'sample-child-2': {\n      id: 'sample-child-2',\n      data: {\n        name: 'Sample Child 2',\n        icon: 'print',\n      },\n      hasChildren: false,\n      children: [],\n    },\n  };\n\n  expandAndSelect() {\n    this.context = {\n      sample: {\n        isExpanded: true,\n        isSelected: false,\n      },\n      'sample-child-2': {\n        isSelected: true,\n        isExpanded: false,\n      },\n    };\n  }\n}\n"})})}function E(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(k,{...e})}):k(e)}function I(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-vue",children:"<script setup lang=\"ts\">\nimport { TreeContext, TreeModel } from '@siemens/ix';\nimport { IxButton, IxTree } from '@siemens/ix-vue';\nimport { defineComponent, onMounted, ref } from 'vue';\n\ntype TreeData = {\n  name: string;\n  icon: string;\n};\n\nconst context = ref<TreeContext>();\nconst model = ref<TreeModel<TreeData>>();\n\nfunction renderItem(data: TreeData) {\n  return defineComponent({\n    setup: () => {\n      data;\n    },\n    template: `\n    <div style=\"display: flex; align-items: center\">\n      <IxIcon :name=\"data.icon\" size=\"16\" style=\"margin-inline-end: 0.5rem\" />\n      {{ data.name }}\n    </div>`,\n  });\n}\n\nfunction expandAndSelect() {\n  context.value = {\n    sample: {\n      isExpanded: true,\n      isSelected: false,\n    },\n    'sample-child-2': {\n      isSelected: true,\n      isExpanded: false,\n    },\n  };\n}\n\nonMounted(() => {\n  model.value = {\n    root: {\n      id: 'root',\n      data: {\n        icon: '',\n        name: '',\n      },\n      hasChildren: true,\n      children: ['sample'],\n    },\n    sample: {\n      id: 'sample',\n      data: {\n        name: 'Sample',\n        icon: 'star',\n      },\n      hasChildren: true,\n      children: ['sample-child-1', 'sample-child-2'],\n    },\n    'sample-child-1': {\n      id: 'sample-child-1',\n      data: {\n        name: 'Sample Child 1',\n        icon: 'cut',\n      },\n      hasChildren: false,\n      children: [],\n    },\n    'sample-child-2': {\n      id: 'sample-child-2',\n      data: {\n        name: 'Sample Child 2',\n        icon: 'print',\n      },\n      hasChildren: false,\n      children: [],\n    },\n  };\n});\n<\/script>\n\n<template>\n  <div style=\"display: block; position: relative; width: 100%; height: 40rem\">\n    <IxButton @click=\"expandAndSelect\" ghost style=\"margin-bottom: 2rem\">\n      Expand Tree\n    </IxButton>\n    <IxTree\n      root=\"root\"\n      :model=\"model\"\n      :context=\"context\"\n      @contextChange=\"({ detail }) => (context = detail)\"\n    >\n    </IxTree>\n  </div>\n</template>\n"})})}function D(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(I,{...e})}):I(e)}function N(e){const n={code:"code",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>Tree custom example</title>\n    <script>\n      import { addIcons } from '@siemens/ix-icons';\n      import { iconStar, iconCut, iconPrint } from '@siemens/ix-icons/icons';\n\n      addIcons({ iconStar, iconCut, iconPrint });\n    <\/script>\n  </head>\n  <body>\n    <div style=\"height: 8rem; width: 100%\">\n      <ix-button id=\"expand\" ghost style=\"margin-bottom: 2rem\"\n        >Expand Tree</ix-button\n      >\n      <ix-tree root=\"root\" id=\"tree\"></ix-tree>\n    </div>\n\n    <script>\n      (async function () {\n        await window.customElements.whenDefined('ix-tree');\n        const tree = document.getElementById('tree');\n\n        const expandButton = document.getElementById('expand');\n        expandButton.addEventListener('click', () => {\n          tree.context = {\n            sample: {\n              isExpanded: true,\n              isSelected: false,\n            },\n            'sample-child-2': {\n              isSelected: true,\n              isExpanded: false,\n            },\n          };\n        });\n\n        tree.renderItem = (index, item, dataList, context, update) => {\n          const el = document.createElement('ix-tree-item');\n          el.hasChildren = item.hasChildren;\n          el.context = context[item.id];\n\n          const div = document.createElement('div');\n          div.style.display = 'flex';\n\n          const name = document.createElement('span');\n          const icon = document.createElement('ix-icon');\n          icon.name = item.data.icon;\n          icon.style.marginRight = '0.5rem';\n\n          div.appendChild(icon);\n          div.appendChild(name);\n\n          name.innerText = item.data.name;\n\n          el.appendChild(div);\n\n          update((updateTreeItem) => {\n            name.innerText = updateTreeItem.data.name;\n          });\n\n          return el;\n        };\n\n        tree.model = {\n          root: {\n            id: 'root',\n            data: null,\n            hasChildren: true,\n            children: ['sample'],\n          },\n          sample: {\n            id: 'sample',\n            data: {\n              name: 'Sample',\n              icon: 'star',\n            },\n            hasChildren: true,\n            children: ['sample-child-1', 'sample-child-2'],\n          },\n          'sample-child-1': {\n            id: 'sample-child-1',\n            data: {\n              name: 'Sample Child 1',\n              icon: 'cut',\n            },\n            hasChildren: false,\n            children: [],\n          },\n          'sample-child-2': {\n            id: 'sample-child-2',\n            data: {\n              name: 'Sample Child 2',\n              icon: 'print',\n            },\n            hasChildren: false,\n            children: [],\n          },\n        };\n      })();\n    <\/script>\n    <script type=\"module\" src=\"./init.js\"><\/script>\n  </body>\n</html>\n"})})}function R(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(N,{...e})}):N(e)}function P(e){return(0,i.jsx)(x.A,{name:"tree-custom",source:{react:{"tree-custom.tsx":S},angular:{"tree-custom.ts":E},vue:{"tree-custom.vue":D},html:{"tree-custom.html":R}},files:{react:{"tree-custom.tsx":"react/tree-custom.tsx"},angular:{"tree-custom.ts":"angular/tree-custom.ts"},vue:{"tree-custom.vue":"vue/tree-custom.vue"},html:{"tree-custom.html":"html/tree-custom.html"}},height:e.height,onlyFramework:e.onlyFramework})}function H(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(P,{...e})}):P(e)}const B={},M=void 0,_={},F=[{value:"Development",id:"development",level:2},{value:"Basic",id:"basic",level:3},{value:"Custom tree node",id:"custom-tree-node",level:3},{value:"API for ix-tree",id:"api-for-ix-tree",level:3},{value:"Properties",id:"properties",level:4},{value:"Events",id:"events",level:4},{value:"API for ix-tree-item",id:"api-for-ix-tree-item",level:3},{value:"Properties",id:"properties",level:4},{value:"Events",id:"events",level:4}];function L(e){const n={h2:"h2",h3:"h3",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,i.jsx)(n.h3,{id:"basic",children:"Basic"}),"\n",(0,i.jsx)(b,{height:"16rem"}),"\n",(0,i.jsx)(n.h3,{id:"custom-tree-node",children:"Custom tree node"}),"\n",(0,i.jsx)(H,{height:"12rem"}),"\n",(0,i.jsx)(d,{}),"\n",(0,i.jsx)(p,{})]})}function $(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(L,{...e})}):L(e)}},42376:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>s,metadata:()=>r,toc:()=>m});const r=JSON.parse('{"id":"components/tree/index","title":"Tree","description":"Trees display hierarchical data structures and allow users to navigate by expanding and collapsing nodes.","source":"@site/docs/components/tree/index.mdx","sourceDirName":"components/tree","slug":"/components/tree/","permalink":"/version-alpha/docs/components/tree/","draft":false,"unlisted":false,"editUrl":"https://github.com/siemens/ix/tree/main/packages/documentation/docs/components/tree/index.mdx","tags":[],"version":"current","frontMatter":{"doc-type":"component","component-tabs":["Code"],"description":"Trees display hierarchical data structures and allow users to navigate by expanding and collapsing nodes.","title":"Tree","deprecated":null,"toc_min_heading_level":2,"toc_max_heading_level":5},"sidebar":"components","previous":{"title":"Tabs","permalink":"/version-alpha/docs/components/tabs/"},"next":{"title":"Workflow","permalink":"/version-alpha/docs/components/workflow/"}}');var i=t(65723),a=t(65598),o=t(4763),l=t(43640);const s={"doc-type":"component","component-tabs":["Code"],description:"Trees display hierarchical data structures and allow users to navigate by expanding and collapsing nodes.",title:"Tree",deprecated:null,toc_min_heading_level:2,toc_max_heading_level:5},d=void 0,c={},m=[...o.toc];function p(e){return(0,i.jsx)(l.A,{children:(0,i.jsx)(o.default,{})})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p()}},62029:(e,n,t)=>{t.d(n,{_:()=>l,u:()=>s});var r=t(22155),i=t(94931),a=t(65723);const o=r.createContext(null);function l(e){let{children:n,content:t}=e;const i=function(e){return(0,r.useMemo)((()=>({metadata:e.metadata,frontMatter:e.frontMatter,assets:e.assets,contentTitle:e.contentTitle,toc:e.toc})),[e])}(t);return(0,a.jsx)(o.Provider,{value:i,children:n})}function s(){const e=(0,r.useContext)(o);if(null===e)throw new i.dV("DocProvider");return e}},61838:(e,n,t)=>{t.d(n,{b:()=>h,A:()=>p});var r=t(68643),i=t(35478),a=t(51038),o=t(17787);const l={AnchorButton:"AnchorButton_X7SC",AnchorHeader:"AnchorHeader_kjZv",NoButtonBorder:"NoButtonBorder_Hb7W",ApiTableText:"ApiTableText_hDT2"};var s=t(65723);function d(e){let{children:n,id:t}=e;return(0,s.jsx)(r.A,{children:()=>(0,s.jsx)("div",{className:"api-table container ml-0 mb-8",id:t,children:(0,s.jsx)("div",{className:"bg-[transparent] rounded-lg overflow-hidden border-solid border-[1px] border-[var(--theme-color-soft-bdr)]",children:n})})})}function c(e){let{children:n,name:t,type:r,singleFramework:a}=e;const{framework:l}=(0,i.u)();let d=t;return"vue"!==l&&"angular"!==l&&"html"!==l||(d=t.split("").map(((e,n)=>e.toUpperCase()===e?`${0!==n?"-":""}${e.toLowerCase()}`:e)).join("")),(0,s.jsxs)("div",{className:"flex bg-[var(--theme-color-2)] text-[var(--theme-color-std-text)] p-4 border-solid border-0 border-b border-[var(--theme-color-soft-bdr)] anchor",children:[(0,s.jsxs)("div",{className:"flex items-center font-bold",children:[d,(0,s.jsx)("a",{href:`#${r??"property"}-${t}`,className:"hash-link","aria-label":`Direct link to ${t}`,title:`Direct link to ${t}`})]}),(0,s.jsxs)("div",{className:"flex items-center ml-auto gap-2",children:[n,a?"":(0,s.jsx)(o.A,{})]})]})}function m(e){let{children:n,name:t}=e;return(0,s.jsxs)("div",{className:l.ApiTableText,children:[(0,s.jsx)("div",{className:"px-8 py-4 font-bold w-auto border-solid border-0 border-r border-[var(--theme-color-soft-bdr)]",children:t}),(0,s.jsx)("div",{className:"w-auto p-4",children:n})]})}d.PropertyHeader=c,d.EventHeader=function(e){let{children:n,name:t}=e;const{framework:r}=(0,i.u)();let a=t;return"react"===r&&(a=`on${t.charAt(0).toUpperCase()}${t.slice(1)}`),(0,s.jsx)(c,{name:a,type:"event",children:n})},d.SlotHeader=function(e){let{children:n,name:t}=e;return(0,s.jsx)(c,{name:t,type:"slot",children:n})},d.Text=m,d.Code=function(e){let{children:n,name:t}=e;return(0,s.jsx)(m,{name:t,children:(0,s.jsx)("code",{className:"p-1",children:n})})};const p=d;function h(e){let{children:n,right:t,anchorName:r,anchorLabel:i,noBottomBorder:o,onClick:d}=e;return(0,s.jsxs)("div",{className:(0,a.A)(l.AnchorHeader,{[l.NoButtonBorder]:o}),children:[(0,s.jsx)("div",{className:"flex items-center font-bold w-full",children:(0,s.jsxs)("button",{onClick:d,className:(0,a.A)("all-unset",l.AnchorButton),tabIndex:0,children:[n,(0,s.jsx)("a",{href:`#${r}`,className:"hash-link","aria-label":i,title:i})]})}),(0,s.jsx)("div",{className:"flex items-center ml-auto gap-2",children:t})]})}},34197:(e,n,t)=>{t.d(n,{k$:()=>l,PI:()=>m,df:()=>o});const r={Tag:"Tag_JPbC",Since:"Since_Ybno",FormReady:"FormReady_rKLF",Deprecated:"Deprecated_M0Gf",Redirect:"Redirect_eyq7",Link:"Link_YkBF"};var i=t(65723);function a(e){let{children:n}=e;return(0,i.jsx)("div",{className:r.Tag,children:n})}function o(e){let{message:n}=e;return(0,i.jsx)(a,{children:(0,i.jsxs)("div",{className:r.Since,children:["Since ",n]})})}function l(e){let{message:n}=e;return(0,i.jsx)(a,{children:(0,i.jsxs)("div",{className:r.Deprecated,children:["Deprecated ",n]})})}var s=t(22155),d=t(95130),c=t(51038);function m(e){let{link:n,children:t}=e;return(0,i.jsx)(a,{children:(0,i.jsxs)("div",{className:(0,c.A)(r.Redirect),children:[s.createElement("ix-icon",{name:d.B7e,color:"color-primary",size:"16"}),(0,i.jsx)("a",{href:n,target:"_blank",rel:"noreferrer",className:r.Link,children:t})]})})}},43640:(e,n,t)=>{t.d(n,{A:()=>s,M:()=>l});var r=t(62029),i=t(62934),a=t(22155),o=t(65723);function l(){const{metadata:e}=(0,r.u)(),n=(0,i.zy)(),[t,o]=(0,a.useState)(null),[l,s]=(0,a.useState)(null),[d,c]=(0,a.useState)(null),[m,p]=(0,a.useState)(0),[h]=(0,a.useState)(new URLSearchParams(n.search));return(0,a.useEffect)((()=>{const t=e.frontMatter["component-tabs"],r=new URLSearchParams(n.search),i=r.has("current-tabs"),a=r.get("current-tabs");s(t),c(a),o(i)}),[n,n.search,e]),(0,a.useEffect)((()=>{if(null===t||!l)return void p(-1);const e=l.findIndex((e=>e===d));p(e)}),[t,l,p,d]),{componentTabs:l,searchParams:h,hasQueryString:t,currentTab:d,currentIndex:m}}function s(e){const{componentTabs:n,hasQueryString:t,currentTab:r}=l(),[i,s]=(0,a.useState)((()=>Array.isArray(e.children)?e.children[0]:e.children));return(0,a.useEffect)((()=>{if(!n)return;const t=n.findIndex((e=>e===r));Array.isArray(e.children)?s(e.children[t]):s(e.children)}),[n,e.children]),(0,o.jsx)("div",{children:i})}}}]);