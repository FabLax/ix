"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[342],{92002:(e,n,t)=>{t.d(n,{Ay:()=>d,RM:()=>l});var a=t(65723),i=t(65598),o=t(34197),r=(t(17787),t(61838));const l=[{value:"API for ix-validation-tooltip",id:"api-for-ix-validation-tooltip",level:3},{value:"Properties",id:"properties",level:4},{value:"Slot",id:"slot",level:4}];function s(e){const n={h3:"h3",h4:"h4",...(0,i.R)(),...e.components};return r.A||c("ApiTable",!1),r.A.Code||c("ApiTable.Code",!0),r.A.PropertyHeader||c("ApiTable.PropertyHeader",!0),r.A.SlotHeader||c("ApiTable.SlotHeader",!0),r.A.Text||c("ApiTable.Text",!0),(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h3,{id:"api-for-ix-validation-tooltip",children:"API for ix-validation-tooltip"}),"\n",(0,a.jsx)(n.h4,{id:"properties",children:"Properties"}),"\n",(0,a.jsxs)(r.A,{id:"property-message",children:[(0,a.jsx)(r.A.PropertyHeader,{name:"message",singleFramework:""}),(0,a.jsx)(r.A.Text,{name:"Description",children:"Message of the tooltip"}),(0,a.jsx)(r.A.Code,{name:"Attribute",children:"message"}),(0,a.jsx)(r.A.Code,{name:"Type",children:"string"})]}),"\n",(0,a.jsxs)(r.A,{id:"property-placement",children:[(0,a.jsx)(r.A.PropertyHeader,{name:"placement",singleFramework:""}),(0,a.jsx)(r.A.Text,{name:"Description",children:"Placement of the tooltip"}),(0,a.jsx)(r.A.Code,{name:"Attribute",children:"placement"}),(0,a.jsx)(r.A.Code,{name:"Type",children:'"bottom" | "left" | "right" | "top"'}),(0,a.jsx)(r.A.Code,{name:"Default",children:"'top'"})]}),"\n",(0,a.jsxs)(r.A,{id:"property-suppressAutomaticPlacement",children:[(0,a.jsx)(r.A.PropertyHeader,{name:"suppressAutomaticPlacement",singleFramework:"",children:(0,a.jsx)(o.df,{message:"2.0.0"})}),(0,a.jsx)(r.A.Text,{name:"Description",children:"Suppress the automatic placement of the dropdown."}),(0,a.jsx)(r.A.Code,{name:"Attribute",children:"suppress-automatic-placement"}),(0,a.jsx)(r.A.Code,{name:"Type",children:"boolean"}),(0,a.jsx)(r.A.Code,{name:"Default",children:"false"})]}),"\n",(0,a.jsx)(n.h4,{id:"slot",children:"Slot"}),"\n",(0,a.jsxs)(r.A,{id:"slot-tooltip-message",children:[(0,a.jsx)(r.A.SlotHeader,{name:"tooltip-message"}),(0,a.jsx)(r.A.Text,{name:"Description",children:"Custom tooltip message with html support"})]})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(s,{...e})}):s(e)}function c(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}},84099:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>N,contentTitle:()=>g,default:()=>C,frontMatter:()=>j,metadata:()=>a,toc:()=>w});const a=JSON.parse('{"id":"legacy/validation","title":"Form validation","description":"Show latest version","source":"@site/docs/legacy/validation.mdx","sourceDirName":"legacy","slug":"/legacy/validation","permalink":"/version-alpha/docs/legacy/validation","draft":false,"unlisted":true,"editUrl":"https://github.com/siemens/ix/tree/main/packages/documentation/docs/legacy/validation.mdx","tags":[],"version":"current","frontMatter":{"unlisted":true},"sidebar":"components"}');var i=t(65723),o=t(65598),r=t(89403);function l(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:'import {\n  IxButton,\n  IxCol,\n  IxLayoutGrid,\n  IxRow,\n  IxValidationTooltip,\n} from \'@siemens/ix-react\';\n\nimport { useForm } from \'react-hook-form\';\n\nexport default () => {\n  const { register, handleSubmit, formState } = useForm({\n    defaultValues: {\n      firstName: undefined,\n      lastName: undefined,\n      userName: undefined,\n    },\n    shouldFocusError: false,\n    shouldUseNativeValidation: true,\n  });\n\n  const onSubmit = (data: any) => {\n    console.log(data);\n  };\n\n  return (\n    <>\n      <form\n        className={`needs-validation ${\n          formState.isSubmitted ? \'was-validated\' : \'\'\n        }`}\n        noValidate\n        onSubmit={handleSubmit(onSubmit)}\n      >\n        <IxLayoutGrid>\n          <IxRow>\n            <IxCol size="4">\n              <label className="ix-form-label" htmlFor="validationCustom01">\n                First name\n              </label>\n              <input\n                type="text"\n                className={`ix-form-control ${\n                  formState.errors.firstName ? \'is-invalid\' : \'\'\n                }`}\n                id="validationCustom01"\n                {...register(\'firstName\', {\n                  required: true,\n                })}\n              />\n              <div className="invalid-feedback">\n                Please choose a first name.\n              </div>\n              {!formState.errors.firstName && (\n                <div className="valid-feedback">Looks good!</div>\n              )}\n            </IxCol>\n          </IxRow>\n\n          <IxRow>\n            <IxCol size="4">\n              <IxValidationTooltip message="Cannot be empty!">\n                <label className="ix-form-label" htmlFor="validationCustom02">\n                  Last name\n                </label>\n                <input\n                  type="text"\n                  className={`ix-form-control ${\n                    formState.errors.lastName ? \'is-invalid\' : \'\'\n                  }`}\n                  id="validationCustom02"\n                  {...register(\'lastName\', {\n                    required: true,\n                  })}\n                />\n              </IxValidationTooltip>\n            </IxCol>\n          </IxRow>\n\n          <IxRow>\n            <IxCol size="4">\n              <label\n                className="ix-form-label"\n                htmlFor="validationCustomUsername"\n              >\n                Username\n              </label>\n              <input\n                type="text"\n                className={`ix-form-control ${\n                  formState.errors.userName ? \'is-invalid\' : \'\'\n                }`}\n                id="validationCustomUsername"\n                aria-describedby="inputGroupPrepend"\n                {...register(\'userName\', {\n                  required: true,\n                })}\n              />\n              <div className="invalid-feedback">Please choose a username.</div>\n            </IxCol>\n          </IxRow>\n\n          <IxRow>\n            <IxCol>\n              <IxButton type="submit">Submit form</IxButton>\n            </IxCol>\n          </IxRow>\n        </IxLayoutGrid>\n      </form>\n    </>\n  );\n};\n'})})}function s(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}function d(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:'import { Component } from \'@angular/core\';\n\n@Component({\n  selector: \'app-example\',\n  template: `\n    <form\n      class="needs-validation"\n      [ngClass]="{ \'was-validated\': wasValidated }"\n      no-validate\n      (submit)="onSubmit($event)"\n    >\n      <ix-layout-grid>\n        <ix-row>\n          <ix-col size="4">\n            <label class="ix-form-label" for="validationCustom01"\n              >First name</label\n            >\n            <input\n              class="ix-form-control"\n              name="firstName"\n              type="text"\n              id="validationCustom01"\n              [(ngModel)]="data.firstName"\n              #firstName="ngModel"\n              required\n            />\n            <div class="invalid-feedback">Please choose a first name.</div>\n            <div class="valid-feedback">Looks good!</div>\n          </ix-col>\n        </ix-row>\n        <ix-row>\n          <ix-col size="4">\n            <ix-validation-tooltip message="Cannot be empty!">\n              <label class="ix-form-label" for="validationCustom02"\n                >Last name</label\n              >\n              <input\n                class="ix-form-control"\n                name="lastName"\n                type="text"\n                id="validationCustom02"\n                [(ngModel)]="data.lastName"\n                #lastName="ngModel"\n                required\n              />\n            </ix-validation-tooltip>\n          </ix-col>\n        </ix-row>\n        <ix-row>\n          <ix-col size="4">\n            <label class="ix-form-label" for="validationCustomUsername">\n              Username\n            </label>\n            <input\n              class="ix-form-control"\n              name="userName"\n              type="text"\n              id="validationCustomUsername"\n              aria-describedby="inputGroupPrepend"\n              [(ngModel)]="data.userName"\n              #userName="ngModel"\n              required\n            />\n            <div class="invalid-feedback">Please choose a username.</div>\n          </ix-col>\n        </ix-row>\n        <ix-row>\n          <ix-col>\n            <button class="btn btn-primary" type="submit">Submit form</button>\n          </ix-col>\n        </ix-row>\n      </ix-layout-grid>\n    </form>\n  `,\n})\nexport default class Validation {\n  data = {\n    firstName: \'\',\n    lastName: \'\',\n    userName: \'\',\n  };\n\n  wasValidated = false;\n\n  onSubmit(event: SubmitEvent) {\n    event.preventDefault();\n\n    this.wasValidated = true;\n  }\n}\n'})})}function c(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}function m(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-vue",children:'<script setup lang="ts">\nimport {\n  IxButton,\n  IxCol,\n  IxLayoutGrid,\n  IxRow,\n  IxValidationTooltip,\n} from \'@siemens/ix-vue\';\nimport { reactive, ref } from \'vue\';\n\nlet firstName = ref(\'\');\nlet lastName = ref(\'\');\nlet userName = ref(\'\');\nlet formState = reactive({\n  errors: {\n    firstName: undefined,\n    lastName: undefined,\n    userName: undefined,\n  },\n  isSubmitted: false,\n});\n\nconst onSubmit = () => {\n  console.log({\n    firstName: firstName.value,\n    lastName: lastName.value,\n    userName: userName.value,\n  });\n  formState.isSubmitted = true;\n};\n<\/script>\n\n<template>\n  <form\n    class="needs-validation"\n    :class="{ \'was-validated\': formState.isSubmitted }"\n    @submit.prevent="onSubmit"\n    novalidate\n  >\n    <IxLayoutGrid>\n      <IxRow>\n        <IxCol size="4">\n          <label class="ix-form-label" for="validationCustom01"\n            >First name</label\n          >\n          <input\n            type="text"\n            :class="{\n              \'is-invalid\': formState.errors.firstName,\n              \'ix-form-control\': true,\n            }"\n            id="validationCustom01"\n            v-model="firstName"\n            required\n          />\n          <div class="invalid-feedback">Please choose a first name.</div>\n          <div v-if="!formState.errors.firstName" class="valid-feedback">\n            Looks good!\n          </div>\n        </IxCol>\n      </IxRow>\n\n      <IxRow>\n        <IxCol size="4">\n          <IxValidationTooltip message="Cannot be empty!">\n            <label class="ix-form-label" for="validationCustom02"\n              >Last name</label\n            >\n            <input\n              type="text"\n              :class="{\n                \'is-invalid\': formState.errors.lastName,\n                \'ix-form-control\': true,\n              }"\n              id="validationCustom02"\n              v-model="lastName"\n              required\n            />\n          </IxValidationTooltip>\n        </IxCol>\n      </IxRow>\n\n      <IxRow>\n        <IxCol size="4">\n          <label for="validationCustomUsername" class="ix-form-label"\n            >Username</label\n          >\n          <input\n            type="text"\n            :class="{\n              \'is-invalid\': formState.errors.userName,\n              \'ix-form-control\': true,\n            }"\n            id="validationCustomUsername"\n            aria-describedby="inputGroupPrepend"\n            v-model="userName"\n            required\n          />\n          <div class="invalid-feedback">Please choose a username.</div>\n        </IxCol>\n      </IxRow>\n\n      <IxRow>\n        <IxCol>\n          <IxButton type="submit">Submit form</IxButton>\n        </IxCol>\n      </IxRow>\n    </IxLayoutGrid>\n  </form>\n</template>\n'})})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}function x(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>Validation example</title>\n  </head>\n  <body>\n    <form class="needs-validation" novalidate>\n      <ix-layout-grid>\n        <ix-row>\n          <ix-col size="4">\n            <label class="ix-form-label" for="validationCustom01"\n              >First name</label\n            >\n            <input\n              class="ix-form-control"\n              type="text"\n              id="validationCustom01"\n              value=""\n              required\n            />\n            <div class="invalid-feedback">Please choose a first name.</div>\n            <div class="valid-feedback">Looks good!</div>\n          </ix-col>\n        </ix-row>\n        <ix-row>\n          <ix-col size="4">\n            <ix-validation-tooltip message="Cannot be empty!">\n              <label class="ix-form-label" for="validationCustom02"\n                >Last name</label\n              >\n              <input\n                class="ix-form-control"\n                type="text"\n                id="validationCustom02"\n                value=""\n                required\n              />\n            </ix-validation-tooltip>\n          </ix-col>\n        </ix-row>\n        <ix-row>\n          <ix-col size="4">\n            <label class="ix-form-label" for="validationCustomUsername">\n              Username\n            </label>\n            <input\n              class="ix-form-control"\n              type="text"\n              id="validationCustomUsername"\n              aria-describedby="inputGroupPrepend"\n              required\n              minlength="4"\n            />\n            <div class="invalid-feedback">Please choose a username.</div>\n          </ix-col>\n        </ix-row>\n        <ix-row>\n          <ix-col>\n            <ix-button type="submit">Submit form</ix-button>\n          </ix-col>\n        </ix-row>\n      </ix-layout-grid>\n    </form>\n\n    <script>\n      (async () => {\n        await window.customElements.whenDefined(\'ix-validation-tooltip\');\n        const forms = document.querySelector(\'form\');\n        forms.addEventListener(\'submit\', (event) => {\n          event.preventDefault();\n          forms.classList.add(\'was-validated\');\n        });\n      })();\n    <\/script>\n    <script type="module" src="./init.js"><\/script>\n  </body>\n</html>\n'})})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}function f(e){return(0,i.jsx)(r.A,{name:"validation",source:{react:{"validation.tsx":s},angular:{"validation.ts":c},vue:{"validation.vue":u},html:{"validation.html":p}},files:{react:{"validation.tsx":"react/validation.tsx"},angular:{"validation.ts":"angular/validation.ts"},vue:{"validation.vue":"vue/validation.vue"},html:{"validation.html":"html/validation.html"}},height:e.height,onlyFramework:e.onlyFramework})}function v(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(f,{...e})}):f(e)}var h=t(34197),b=t(92002);const j={unlisted:!0},g="Form validation",N={},w=[{value:"Development",id:"development",level:2},{value:"Basic",id:"basic",level:3},{value:"API",id:"api",level:3},...b.RM];function y(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"form-validation",children:"Form validation"})}),"\n",(0,i.jsxs)("div",{className:"flex gap-2",children:[(0,i.jsx)(h.k$,{message:"2.6.0"}),(0,i.jsx)(h.PI,{url:"/docs/components/forms-validation",children:(0,i.jsx)(n.p,{children:"Show latest version"})})]}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsx)("br",{}),"\n",(0,i.jsxs)(n.p,{children:["For the validation ",(0,i.jsx)(n.code,{children:"@siemens/ix"})," use the validation concept of ",(0,i.jsx)(n.a,{href:"https://getbootstrap.com/docs/5.2/forms/validation/",children:"bootstrap"}),".\nThe difference is that the validation tooltip is implemented as ",(0,i.jsx)(n.code,{children:"@siemens/ix"})," ",(0,i.jsx)(n.a,{href:"#properties-tooltip",children:"tooltip"})]}),"\n",(0,i.jsx)(n.p,{children:"In the following examples section you will find different implementations of a form validation."}),"\n",(0,i.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,i.jsx)(n.h3,{id:"basic",children:"Basic"}),"\n",(0,i.jsx)(v,{height:"22rem"}),"\n",(0,i.jsx)(n.h3,{id:"api",children:"API"}),"\n",(0,i.jsx)(b.Ay,{})]})}function C(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(y,{...e})}):y(e)}},61838:(e,n,t)=>{t.d(n,{b:()=>x,A:()=>u});var a=t(68643),i=t(35478),o=t(51038),r=t(17787);const l={AnchorButton:"AnchorButton_X7SC",AnchorHeader:"AnchorHeader_kjZv",NoButtonBorder:"NoButtonBorder_Hb7W",ApiTableText:"ApiTableText_hDT2"};var s=t(65723);function d(e){let{children:n,id:t}=e;return(0,s.jsx)(a.A,{children:()=>(0,s.jsx)("div",{className:"api-table container ml-0 mb-8",id:t,children:(0,s.jsx)("div",{className:"bg-[transparent] rounded-lg overflow-hidden border-solid border-[1px] border-[var(--theme-color-soft-bdr)]",children:n})})})}function c(e){let{children:n,name:t,type:a,singleFramework:o}=e;const{framework:l}=(0,i.u)();let d=t;return"vue"!==l&&"angular"!==l&&"html"!==l||(d=t.split("").map(((e,n)=>e.toUpperCase()===e?`${0!==n?"-":""}${e.toLowerCase()}`:e)).join("")),(0,s.jsxs)("div",{className:"flex bg-[var(--theme-color-2)] text-[var(--theme-color-std-text)] p-4 border-solid border-0 border-b border-[var(--theme-color-soft-bdr)] anchor",children:[(0,s.jsxs)("div",{className:"flex items-center font-bold",children:[d,(0,s.jsx)("a",{href:`#${a??"property"}-${t}`,className:"hash-link","aria-label":`Direct link to ${t}`,title:`Direct link to ${t}`})]}),(0,s.jsxs)("div",{className:"flex items-center ml-auto gap-2",children:[n,o?"":(0,s.jsx)(r.A,{})]})]})}function m(e){let{children:n,name:t}=e;return(0,s.jsxs)("div",{className:l.ApiTableText,children:[(0,s.jsx)("div",{className:"px-8 py-4 font-bold w-auto border-solid border-0 border-r border-[var(--theme-color-soft-bdr)]",children:t}),(0,s.jsx)("div",{className:"w-auto p-4",children:n})]})}d.PropertyHeader=c,d.EventHeader=function(e){let{children:n,name:t}=e;const{framework:a}=(0,i.u)();let o=t;return"react"===a&&(o=`on${t.charAt(0).toUpperCase()}${t.slice(1)}`),(0,s.jsx)(c,{name:o,type:"event",children:n})},d.SlotHeader=function(e){let{children:n,name:t}=e;return(0,s.jsx)(c,{name:t,type:"slot",children:n})},d.Text=m,d.Code=function(e){let{children:n,name:t}=e;return(0,s.jsx)(m,{name:t,children:(0,s.jsx)("code",{className:"p-1",children:n})})};const u=d;function x(e){let{children:n,right:t,anchorName:a,anchorLabel:i,noBottomBorder:r,onClick:d}=e;return(0,s.jsxs)("div",{className:(0,o.A)(l.AnchorHeader,{[l.NoButtonBorder]:r}),children:[(0,s.jsx)("div",{className:"flex items-center font-bold w-full",children:(0,s.jsxs)("button",{onClick:d,className:(0,o.A)("all-unset",l.AnchorButton),tabIndex:0,children:[n,(0,s.jsx)("a",{href:`#${a}`,className:"hash-link","aria-label":i,title:i})]})}),(0,s.jsx)("div",{className:"flex items-center ml-auto gap-2",children:t})]})}},34197:(e,n,t)=>{t.d(n,{k$:()=>l,PI:()=>m,df:()=>r});const a={Tag:"Tag_JPbC",Since:"Since_Ybno",FormReady:"FormReady_rKLF",Deprecated:"Deprecated_M0Gf",Redirect:"Redirect_eyq7",Link:"Link_YkBF"};var i=t(65723);function o(e){let{children:n}=e;return(0,i.jsx)("div",{className:a.Tag,children:n})}function r(e){let{message:n}=e;return(0,i.jsx)(o,{children:(0,i.jsxs)("div",{className:a.Since,children:["Since ",n]})})}function l(e){let{message:n}=e;return(0,i.jsx)(o,{children:(0,i.jsxs)("div",{className:a.Deprecated,children:["Deprecated ",n]})})}var s=t(22155),d=t(52961),c=t(51038);function m(e){let{link:n,children:t}=e;return(0,i.jsx)(o,{children:(0,i.jsxs)("div",{className:(0,c.A)(a.Redirect),children:[s.createElement("ix-icon",{name:d.B7e,color:"color-primary",size:"16"}),(0,i.jsx)("a",{href:n,target:"_blank",rel:"noreferrer",className:a.Link,children:t})]})})}}}]);