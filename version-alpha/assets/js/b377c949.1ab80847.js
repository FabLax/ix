"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1461],{18227:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>v,contentTitle:()=>y,default:()=>b,frontMatter:()=>w,metadata:()=>r,toc:()=>G});const r=JSON.parse('{"id":"components/grid/code","title":"code","description":"Development","source":"@site/docs/components/grid/code.mdx","sourceDirName":"components/grid","slug":"/components/grid/code","permalink":"/version-alpha/docs/components/grid/code","draft":false,"unlisted":false,"editUrl":"https://github.com/siemens/ix/tree/main/packages/documentation/docs/components/grid/code.mdx","tags":[],"version":"current","frontMatter":{}}');var i=t(65723),s=t(65598),a=t(89403);function o(e){const n={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { GridOptions } from 'ag-grid-community';\nimport { AgGridReact } from 'ag-grid-react';\n\nconst gridOptions = {\n  columnDefs: [\n    {\n      field: 'type',\n      headerName: 'Type',\n      resizable: true,\n      checkboxSelection: true,\n    },\n    {\n      field: 'status',\n      headerName: 'Status',\n      resizable: true,\n      sortable: true,\n      filter: true,\n    },\n    { field: 'hwVersion', headerName: 'HW version', resizable: true },\n  ],\n  rowData: [\n    {\n      type: 'Equipment',\n      status: 'Normal',\n      hwVersion: '2.0',\n      checked: false,\n    },\n    {\n      type: 'Positioner',\n      status: 'Maintenance',\n      hwVersion: '1.0',\n      checked: true,\n    },\n    {\n      type: 'Pressure sensor',\n      status: 'Unknown',\n      hwVersion: 'N/A',\n      checked: false,\n    },\n  ],\n  rowSelection: 'multiple',\n  suppressCellFocus: true,\n  checkboxSelection: true,\n} as GridOptions;\n\nexport default () => {\n  return (\n    <div style={{ height: '12rem', width: '100%' }}>\n      <AgGridReact\n        gridOptions={gridOptions}\n        className=\"ag-theme-alpine-dark ag-theme-ix\"\n      ></AgGridReact>\n    </div>\n  );\n};\n"})})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}function c(e){const n={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { Component } from '@angular/core';\nimport { GridOptions } from 'ag-grid-community';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './aggrid.html',\n})\nexport default class AGGrid {\n  gridOptions = {\n    columnDefs: [\n      {\n        field: 'type',\n        headerName: 'Type',\n        resizable: true,\n        checkboxSelection: true,\n      },\n      {\n        field: 'status',\n        headerName: 'Status',\n        resizable: true,\n        sortable: true,\n        filter: true,\n      },\n      { field: 'hwVersion', headerName: 'HW version', resizable: true },\n    ],\n    rowData: [\n      {\n        type: 'Equipment',\n        status: 'Normal',\n        hwVersion: '2.0',\n        checked: false,\n      },\n      {\n        type: 'Positioner',\n        status: 'Maintenance',\n        hwVersion: '1.0',\n        checked: true,\n      },\n      {\n        type: 'Pressure sensor',\n        status: 'Unknown',\n        hwVersion: 'N/A',\n        checked: false,\n      },\n    ],\n    rowSelection: 'multiple',\n    suppressCellFocus: true,\n    checkboxSelection: true,\n  } as GridOptions;\n}\n"})})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}function h(e){const n={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<ag-grid-angular\n  style="height: 12rem; width: 100%"\n  class="ag-theme-alpine-dark ag-theme-ix"\n  [gridOptions]="gridOptions"\n>\n</ag-grid-angular>\n'})})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}function p(e){const n={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-vue",children:"<script setup lang=\"ts\">\nimport { GridOptions } from 'ag-grid-community';\nimport { AgGridVue } from 'ag-grid-vue3';\n\nconst gridOptions = {\n  columnDefs: [\n    {\n      field: 'type',\n      headerName: 'Type',\n      resizable: true,\n      checkboxSelection: true,\n    },\n    {\n      field: 'status',\n      headerName: 'Status',\n      resizable: true,\n      sortable: true,\n      filter: true,\n    },\n    { field: 'hwVersion', headerName: 'HW version', resizable: true },\n  ],\n  rowData: [\n    {\n      type: 'Equipment',\n      status: 'Normal',\n      hwVersion: '2.0',\n      checked: false,\n    },\n    {\n      type: 'Positioner',\n      status: 'Maintenance',\n      hwVersion: '1.0',\n      checked: true,\n    },\n    {\n      type: 'Pressure sensor',\n      status: 'Unknown',\n      hwVersion: 'N/A',\n      checked: false,\n    },\n  ],\n  rowSelection: 'multiple',\n  suppressCellFocus: true,\n  checkboxSelection: true,\n} as GridOptions;\n<\/script>\n\n<template>\n  <AgGridVue\n    style=\"height: 12rem; width: 100%\"\n    class=\"ag-theme-alpine-dark ag-theme-ix\"\n    :gridOptions=\"gridOptions\"\n  >\n  </AgGridVue>\n</template>\n"})})}function g(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}function m(e){const n={code:"code",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>AG Grid example</title>\n  </head>\n  <body>\n    <div\n      style=\"height: 12rem; width: 100%\"\n      id=\"grid-container\"\n      class=\"ag-theme-alpine-dark ag-theme-ix\"\n    ></div>\n\n    <script type=\"module\">\n      import {\n        AllCommunityModule,\n        ModuleRegistry,\n        provideGlobalGridOptions,\n      } from 'ag-grid-community';\n      import * as agGrid from 'ag-grid-community';\n\n      // Register all community features\n      ModuleRegistry.registerModules([AllCommunityModule]);\n\n      // Mark all grids as using legacy themes\n      provideGlobalGridOptions({ theme: 'legacy' });\n\n      (async function () {\n        const container = document.querySelector('#grid-container');\n\n        const gridOptions = {\n          columnDefs: [\n            {\n              field: 'type',\n              headerName: 'Type',\n              resizable: true,\n              checkboxSelection: true,\n            },\n            {\n              field: 'status',\n              headerName: 'Status',\n              resizable: true,\n              sortable: true,\n              filter: true,\n            },\n            { field: 'hwVersion', headerName: 'HW version', resizable: true },\n          ],\n          rowData: [\n            {\n              type: 'Equipment',\n              status: 'Normal',\n              hwVersion: '2.0',\n              checked: false,\n            },\n            {\n              type: 'Positioner',\n              status: 'Maintenance',\n              hwVersion: '1.0',\n              checked: true,\n            },\n            {\n              type: 'Pressure sensor',\n              status: 'Unknown',\n              hwVersion: 'N/A',\n              checked: false,\n            },\n          ],\n          rowSelection: 'multiple',\n          suppressCellFocus: true,\n          checkboxSelection: true,\n        };\n\n        agGrid.createGrid(container, gridOptions);\n      })();\n    <\/script>\n    <script type=\"module\" src=\"./init.js\"><\/script>\n  </body>\n</html>\n"})})}function x(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}function f(e){return(0,i.jsx)(a.A,{name:"aggrid",source:{react:{"aggrid.tsx":l},angular:{"aggrid.ts":d,"aggrid.html":u},vue:{"aggrid.vue":g},html:{"aggrid.html":x}},files:{react:{"aggrid.tsx":"react/aggrid.tsx"},angular:{"aggrid.ts":"angular/aggrid.ts","aggrid.html":"angular/aggrid.html"},vue:{"aggrid.vue":"vue/aggrid.vue"},html:{"aggrid.html":"html/aggrid.html"}},height:e.height,onlyFramework:e.onlyFramework})}function j(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(f,{...e})}):f(e)}const w={},y=void 0,v={},G=[{value:"Development",id:"development",level:2},{value:"Installation",id:"installation",level:3},{value:"Siemens Industrial Experience theme for AG Grid",id:"siemens-industrial-experience-theme-for-ag-grid",level:3},{value:"Basic",id:"basic",level:3}];function k(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsx)(n.p,{children:"AG Grid is a third party library that provides a feature rich data grid implementation."}),(0,i.jsxs)(n.p,{children:["Its basic functionality is free and open source (distributed under the ",(0,i.jsx)(n.a,{href:"https://www.ag-grid.com/eula/AG-Grid-Community-License.html",children:"MIT license"}),")."]}),(0,i.jsx)(n.p,{children:"Please note that more advanced features like e.g. Row Grouping are only available with AG Grid Enterprise which is a commercial product."}),(0,i.jsxs)(n.p,{children:["More information can be found on the ",(0,i.jsx)(n.a,{href:"https://www.ag-grid.com/license-pricing",children:"AG Grid licenses page"}),"."]})]}),"\n",(0,i.jsx)(n.h3,{id:"installation",children:"Installation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"React"}),": Follow the official AG Grid ",(0,i.jsx)(n.a,{href:"https://www.ag-grid.com/react-data-grid/getting-started/",children:"installation instructions"})," for React."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Angular"}),": Follow the official AG Grid ",(0,i.jsx)(n.a,{href:"https://www.ag-grid.com/angular-data-grid/getting-started/",children:"installation instructions"})," for Angular."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Vue"}),": Follow the official AG Grid ",(0,i.jsx)(n.a,{href:"https://www.ag-grid.com/vue-data-grid/getting-started/",children:"installation instructions"})," for Vue."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Javascript"}),": Follow the official AG Grid ",(0,i.jsx)(n.a,{href:"https://www.ag-grid.com/javascript-data-grid/getting-started/",children:"installation instruction"})," for JavaScript."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"siemens-industrial-experience-theme-for-ag-grid",children:"Siemens Industrial Experience theme for AG Grid"}),"\n",(0,i.jsxs)(n.p,{children:["Install the ",(0,i.jsx)(n.code,{children:"@siemens/ix-aggrid"})," package."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-shell",children:"npm install @siemens/ix-aggrid\n"})}),"\n",(0,i.jsx)(n.p,{children:"and apply the style file in one of your project's style files e.g. styles.scss"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-scss",children:"@import '@siemens/ix-aggrid/dist/ix-aggrid/ix-aggrid.css';\n"})}),"\n",(0,i.jsxs)(n.p,{children:["Siemens Industrial Experience theming for AG Grid (",(0,i.jsx)(n.code,{children:"ag-theme-ix"}),") is based on ",(0,i.jsx)(n.code,{children:"ag-theme-alpine-dark"}),".\nTherefore it is vital to apply the two CSS theme classes in the correct order:"]}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"ag-theme-alpine-dark"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.code,{children:"ag-theme-ix"})}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"e.g.:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<div class="ag-theme-alpine-dark ag-theme-ix"></div>\n'})}),"\n",(0,i.jsx)(n.h3,{id:"basic",children:"Basic"}),"\n",(0,i.jsx)(j,{height:"14rem"})]})}function b(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(k,{...e})}):k(e)}}}]);