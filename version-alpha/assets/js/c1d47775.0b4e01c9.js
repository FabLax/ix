"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[2601,5278,6861],{53980:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>U,contentTitle:()=>F,default:()=>O,frontMatter:()=>_,metadata:()=>a,toc:()=>M});const a=JSON.parse('{"id":"components/panes/code","title":"code","description":"Development","source":"@site/docs/components/panes/code.mdx","sourceDirName":"components/panes","slug":"/components/panes/code","permalink":"/version-alpha/docs/components/panes/code","draft":false,"unlisted":false,"editUrl":"https://github.com/siemens/ix/tree/main/packages/documentation/docs/components/panes/code.mdx","tags":[],"version":"current","frontMatter":{}}');var i=t(65723),o=t(65598),s=(t(34197),t(17787),t(61838));function r(e){const n={h3:"h3",h4:"h4",...(0,o.R)(),...e.components};return s.A||d("ApiTable",!1),s.A.Code||d("ApiTable.Code",!0),s.A.EventHeader||d("ApiTable.EventHeader",!0),s.A.PropertyHeader||d("ApiTable.PropertyHeader",!0),s.A.Text||d("ApiTable.Text",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"api-for-ix-pane",children:"API for ix-pane"}),"\n",(0,i.jsx)(n.h4,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(s.A,{id:"property-borderless",children:[(0,i.jsx)(s.A.PropertyHeader,{name:"borderless",singleFramework:""}),(0,i.jsx)(s.A.Text,{name:"Description",children:"Toggle the border of the pane.Defaults to the borderless attribute of the pane layout. If used standalone it defaults to false."}),(0,i.jsx)(s.A.Code,{name:"Attribute",children:"borderless"}),(0,i.jsx)(s.A.Code,{name:"Type",children:"boolean"}),(0,i.jsx)(s.A.Code,{name:"Default",children:"false"})]}),"\n",(0,i.jsxs)(s.A,{id:"property-composition",children:[(0,i.jsx)(s.A.PropertyHeader,{name:"composition",singleFramework:""}),(0,i.jsx)(s.A.Text,{name:"Description",children:"Defines the position of the pane inside it&#39;s container.Inside a pane layout this property will automatically be set to the name of slot the pane is assigned to."}),(0,i.jsx)(s.A.Code,{name:"Attribute",children:"composition"}),(0,i.jsx)(s.A.Code,{name:"Type",children:'"bottom" | "left" | "right" | "top"'}),(0,i.jsx)(s.A.Code,{name:"Default",children:"'top'"})]}),"\n",(0,i.jsxs)(s.A,{id:"property-expanded",children:[(0,i.jsx)(s.A.PropertyHeader,{name:"expanded",singleFramework:""}),(0,i.jsx)(s.A.Text,{name:"Description",children:"State of the pane"}),(0,i.jsx)(s.A.Code,{name:"Attribute",children:"expanded"}),(0,i.jsx)(s.A.Code,{name:"Type",children:"boolean"}),(0,i.jsx)(s.A.Code,{name:"Default",children:"false"})]}),"\n",(0,i.jsxs)(s.A,{id:"property-heading",children:[(0,i.jsx)(s.A.PropertyHeader,{name:"heading",singleFramework:""}),(0,i.jsx)(s.A.Text,{name:"Description",children:"Title of the side panel"}),(0,i.jsx)(s.A.Code,{name:"Attribute",children:"heading"}),(0,i.jsx)(s.A.Code,{name:"Type",children:"string"})]}),"\n",(0,i.jsxs)(s.A,{id:"property-hideOnCollapse",children:[(0,i.jsx)(s.A.PropertyHeader,{name:"hideOnCollapse",singleFramework:""}),(0,i.jsx)(s.A.Text,{name:"Description",children:"Define if the pane should have a collapsed state"}),(0,i.jsx)(s.A.Code,{name:"Attribute",children:"hide-on-collapse"}),(0,i.jsx)(s.A.Code,{name:"Type",children:"boolean"}),(0,i.jsx)(s.A.Code,{name:"Default",children:"false"})]}),"\n",(0,i.jsxs)(s.A,{id:"property-icon",children:[(0,i.jsx)(s.A.PropertyHeader,{name:"icon",singleFramework:""}),(0,i.jsx)(s.A.Text,{name:"Description",children:"Name of the icon"}),(0,i.jsx)(s.A.Code,{name:"Attribute",children:"icon"}),(0,i.jsx)(s.A.Code,{name:"Type",children:"string"})]}),"\n",(0,i.jsxs)(s.A,{id:"property-size",children:[(0,i.jsx)(s.A.PropertyHeader,{name:"size",singleFramework:""}),(0,i.jsx)(s.A.Text,{name:"Description",children:"The maximum size of the sidebar, when it is expanded"}),(0,i.jsx)(s.A.Code,{name:"Attribute",children:"size"}),(0,i.jsx)(s.A.Code,{name:"Type",children:'"240px" | "320px" | "33%" | "360px" | "480px" | "50%" | "600px"'}),(0,i.jsx)(s.A.Code,{name:"Default",children:"'240px'"})]}),"\n",(0,i.jsxs)(s.A,{id:"property-variant",children:[(0,i.jsx)(s.A.PropertyHeader,{name:"variant",singleFramework:""}),(0,i.jsx)(s.A.Text,{name:"Description",children:"Variant of the side pane.Defaults to the variant attribute of the pane layout. If used standalone it defaults to inline."}),(0,i.jsx)(s.A.Code,{name:"Attribute",children:"variant"}),(0,i.jsx)(s.A.Code,{name:"Type",children:'"floating" | "inline"'}),(0,i.jsx)(s.A.Code,{name:"Default",children:"'inline'"})]}),"\n",(0,i.jsx)(n.h4,{id:"events",children:"Events"}),"\n",(0,i.jsxs)(s.A,{id:"event-borderlessChanged",children:[(0,i.jsx)(s.A.EventHeader,{name:"borderlessChanged"}),(0,i.jsx)(s.A.Text,{name:"Description",children:"This event is triggered when the variant of the pane is changed"}),(0,i.jsx)(s.A.Code,{name:"Event",children:"borderlessChanged"}),(0,i.jsx)(s.A.Code,{name:"Detail",children:"{ slot: string; borderless: boolean; }"})]}),"\n",(0,i.jsxs)(s.A,{id:"event-expandedChanged",children:[(0,i.jsx)(s.A.EventHeader,{name:"expandedChanged"}),(0,i.jsx)(s.A.Text,{name:"Description",children:"This event is triggered when the pane either expands or contracts"}),(0,i.jsx)(s.A.Code,{name:"Event",children:"expandedChanged"}),(0,i.jsx)(s.A.Code,{name:"Detail",children:"{ slot: string; expanded: boolean; }"})]}),"\n",(0,i.jsxs)(s.A,{id:"event-variantChanged",children:[(0,i.jsx)(s.A.EventHeader,{name:"variantChanged"}),(0,i.jsx)(s.A.Text,{name:"Description",children:"This event is triggered when the variant of the pane is changed"}),(0,i.jsx)(s.A.Code,{name:"Event",children:"variantChanged"}),(0,i.jsx)(s.A.Code,{name:"Detail",children:'{ slot: string; variant: "floating" | "inline"; }'})]})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}function d(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}function c(e){const n={h3:"h3",h4:"h4",...(0,o.R)(),...e.components};return s.A||h("ApiTable",!1),s.A.Code||h("ApiTable.Code",!0),s.A.PropertyHeader||h("ApiTable.PropertyHeader",!0),s.A.Text||h("ApiTable.Text",!0),(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h3,{id:"api-for-ix-pane-layout",children:"API for ix-pane-layout"}),"\n",(0,i.jsx)(n.h4,{id:"properties",children:"Properties"}),"\n",(0,i.jsxs)(s.A,{id:"property-borderless",children:[(0,i.jsx)(s.A.PropertyHeader,{name:"borderless",singleFramework:""}),(0,i.jsx)(s.A.Text,{name:"Description",children:"Set the default border state for all panes in the layout"}),(0,i.jsx)(s.A.Code,{name:"Attribute",children:"borderless"}),(0,i.jsx)(s.A.Code,{name:"Type",children:"boolean"}),(0,i.jsx)(s.A.Code,{name:"Default",children:"false"})]}),"\n",(0,i.jsxs)(s.A,{id:"property-layout",children:[(0,i.jsx)(s.A.PropertyHeader,{name:"layout",singleFramework:""}),(0,i.jsx)(s.A.Text,{name:"Description",children:"Choose the layout of the panes.When set to &#39;full-vertical&#39; the vertical panes (left, right) will get the full height.When set to &#39;full-horizontal&#39; the horizontal panes (top, bottom) will get the full width."}),(0,i.jsx)(s.A.Code,{name:"Attribute",children:"layout"}),(0,i.jsx)(s.A.Code,{name:"Type",children:'"full-horizontal" | "full-vertical"'}),(0,i.jsx)(s.A.Code,{name:"Default",children:"'full-vertical'"})]}),"\n",(0,i.jsxs)(s.A,{id:"property-variant",children:[(0,i.jsx)(s.A.PropertyHeader,{name:"variant",singleFramework:""}),(0,i.jsx)(s.A.Text,{name:"Description",children:"Set the default variant for all panes in the layout"}),(0,i.jsx)(s.A.Code,{name:"Attribute",children:"variant"}),(0,i.jsx)(s.A.Code,{name:"Type",children:'"floating" | "inline"'}),(0,i.jsx)(s.A.Code,{name:"Default",children:"'inline'"})]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}function h(e,n){throw new Error("Expected "+(n?"component":"object")+" `"+e+"` to be defined: you likely forgot to import, pass, or provide it.")}var u=t(89403);function x(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { IxButton, IxPane } from '@siemens/ix-react';\nimport { useState } from 'react';\n\nexport default () => {\n  const [expanded, setExpanded] = useState<boolean>(false);\n\n  return (\n    <div style={{ position: 'relative', width: '100%', height: '100%' }}>\n      <IxPane\n        heading=\"Pane Popup\"\n        composition=\"right\"\n        size=\"50%\"\n        variant=\"floating\"\n        hideOnCollapse\n        expanded={expanded}\n        onExpandedChanged={(event: CustomEvent) => {\n          setExpanded(event.detail.expanded);\n        }}\n        style={{\n          position: 'absolute',\n          right: '0',\n          zIndex: '1',\n        }}\n      >\n        <p>This is a popup pane.</p>\n      </IxPane>\n\n      <IxButton\n        onClick={() => setExpanded(!expanded)}\n        style={{ margin: '2.5rem' }}\n      >\n        Toggle Expanded\n      </IxButton>\n    </div>\n  );\n};\n"})})}function m(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(x,{...e})}):x(e)}function g(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './pane.html',\n})\nexport default class Pane {\n  expanded: boolean = false;\n\n  toggleExpanded() {\n    this.expanded = !this.expanded;\n  }\n\n  expandedChanged(event: CustomEvent) {\n    this.expanded = event.detail.expanded;\n  }\n}\n"})})}function f(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(g,{...e})}):g(e)}function v(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<div style="position: relative; width: 100%; height: 100%">\n  <ix-pane\n    heading="Pane Popup"\n    composition="right"\n    size="50%"\n    variant="floating"\n    hide-on-collapse\n    [expanded]="expanded"\n    (expandedChanged)="expandedChanged($event)"\n    style="position: absolute; right: 0; z-index: 1"\n  >\n    <p>This is a popup pane.</p>\n  </ix-pane>\n\n  <ix-button (click)="toggleExpanded()" style="margin: 2.5rem">\n    Toggle Expanded\n  </ix-button>\n</div>\n'})})}function j(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(v,{...e})}):v(e)}function y(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-vue",children:'<script setup lang="ts">\nimport { IxPane, IxButton } from \'@siemens/ix-vue\';\nimport { onMounted, ref } from \'vue\';\n\nconst expanded = ref<boolean>(false);\n\nconst expandedChanged = (event: CustomEvent) => {\n  expanded.value = event.detail.expanded;\n};\n\nonMounted(() => {\n  const pane = document.querySelector(\'ix-pane\');\n  pane?.addEventListener(\'expandedChanged\', expandedChanged);\n});\n<\/script>\n\n<template>\n  <div style="position: relative; width: 100%; height: 100%">\n    <IxPane\n      heading="Pane Popup"\n      composition="right"\n      size="50%"\n      variant="floating"\n      hideOnCollapse\n      :expanded="expanded"\n      style="position: absolute; right: 0; z-index: 1"\n    >\n      <p>This is a popup pane.</p>\n    </IxPane>\n\n    <IxButton\n      @click="\n        () => {\n          expanded = !expanded;\n        }\n      "\n      style="margin: 2.5rem"\n    >\n      Toggle Expanded\n    </IxButton>\n  </div>\n</template>\n'})})}function b(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(y,{...e})}):y(e)}function A(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>Pane example</title>\n  </head>\n  <body>\n    <div style="position: relative; width: 100%; height: 100%">\n      <ix-pane\n        id="popup-pane"\n        heading="Pane Popup"\n        composition="right"\n        size="50%"\n        variant="floating"\n        hide-on-collapse\n        style="position: absolute; right: 0; z-index: 1"\n      >\n        <p>This is a popup pane.</p>\n      </ix-pane>\n\n      <ix-button id="toggle-expanded" style="margin: 2.5rem">\n        Toggle Expanded\n      </ix-button>\n    </div>\n\n    <script>\n      const pane = document.getElementById(\'popup-pane\');\n      const button = document.getElementById(\'toggle-expanded\');\n\n      button.addEventListener(\'click\', () => {\n        pane.expanded = pane.expanded ? undefined : true;\n      });\n    <\/script>\n    <script type="module" src="./init.js"><\/script>\n  </body>\n</html>\n'})})}function T(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(A,{...e})}):A(e)}function w(e){return(0,i.jsx)(u.A,{name:"pane",source:{react:{"pane.tsx":m},angular:{"pane.ts":f,"pane.html":j},vue:{"pane.vue":b},html:{"pane.html":T}},files:{react:{"pane.tsx":"react/pane.tsx"},angular:{"pane.ts":"angular/pane.ts","pane.html":"angular/pane.html"},vue:{"pane.vue":"vue/pane.vue"},html:{"pane.html":"html/pane.html"}},height:e.height,onlyFramework:e.onlyFramework})}function P(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(w,{...e})}):w(e)}function C(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-tsx",children:"import { IxButton, IxPane, IxPaneLayout } from '@siemens/ix-react';\nimport { useState } from 'react';\n\nexport default () => {\n  const [variant, setVariant] = useState<'inline' | 'floating'>('floating');\n  const [layout, setLayout] = useState<'full-horizontal' | 'full-vertical'>(\n    'full-horizontal'\n  );\n\n  return (\n    <IxPaneLayout\n      variant={variant}\n      layout={layout}\n      borderless={variant === 'floating'}\n    >\n      <IxPane heading=\"Pane Left\" slot=\"left\" size=\"33%\">\n        <p>This is the left pane.</p>\n      </IxPane>\n      <IxPane heading=\"Pane Top\" slot=\"top\" size=\"33%\">\n        <p>This is the top pane.</p>\n      </IxPane>\n      <IxPane heading=\"Pane Right\" slot=\"right\" size=\"33%\">\n        <p>This is the right pane.</p>\n      </IxPane>\n      <IxPane heading=\"Pane Bottom\" slot=\"bottom\" size=\"33%\">\n        <p>This is the bottom pane.</p>\n      </IxPane>\n\n      <div slot=\"content\">\n        <IxButton\n          onClick={() =>\n            setVariant(variant === 'inline' ? 'floating' : 'inline')\n          }\n          style={{ margin: '2.5rem' }}\n        >\n          Toggle Variant\n        </IxButton>\n        <IxButton\n          onClick={() =>\n            setLayout(\n              layout === 'full-horizontal' ? 'full-vertical' : 'full-horizontal'\n            )\n          }\n          style={{ margin: '2.5rem' }}\n        >\n          Toggle Layout\n        </IxButton>\n      </div>\n    </IxPaneLayout>\n  );\n};\n"})})}function I(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(C,{...e})}):C(e)}function k(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-ts",children:"import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './pane-layout.html',\n})\nexport default class PaneLayout {\n  variant: 'floating' | 'inline' = 'floating';\n  layout: 'full-horizontal' | 'full-vertical' = 'full-horizontal';\n  borderless: boolean = true;\n\n  toggleVariant() {\n    const isInline: boolean = this.variant === 'inline';\n\n    this.variant = isInline ? 'floating' : 'inline';\n    this.borderless = isInline;\n  }\n\n  toggleLayout() {\n    this.layout =\n      this.layout === 'full-horizontal' ? 'full-vertical' : 'full-horizontal';\n  }\n}\n"})})}function z(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(k,{...e})}):k(e)}function D(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<ix-pane-layout [variant]="variant" [layout]="layout" [borderless]="borderless">\n  <ix-pane heading="Pane Left" slot="left" size="33%">\n    <p>This is the left pane.</p>\n  </ix-pane>\n  <ix-pane heading="Pane Top" slot="top" size="33%">\n    <p>This is the top pane.</p>\n  </ix-pane>\n  <ix-pane heading="Pane Right" slot="right" size="33%">\n    <p>This is the right pane.</p>\n  </ix-pane>\n  <ix-pane heading="Pane Bottom" slot="bottom" size="33%">\n    <p>This is the bottom pane.</p>\n  </ix-pane>\n\n  <div slot="content">\n    <ix-button (click)="toggleVariant()" style="margin: 2.5rem"\n      >Toggle Variant</ix-button\n    >\n    <ix-button (click)="toggleLayout()" style="margin: 2.5rem"\n      >Toggle Layout</ix-button\n    >\n  </div>\n</ix-pane-layout>\n'})})}function R(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(D,{...e})}):D(e)}function E(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-vue",children:'<script setup lang="ts">\nimport { IxPaneLayout, IxPane, IxButton } from \'@siemens/ix-vue\';\nimport { ref } from \'vue\';\n\nconst variant = ref<\'floating\' | \'inline\'>(\'floating\');\nconst layout = ref<\'full-horizontal\' | \'full-vertical\'>(\'full-horizontal\');\n<\/script>\n\n<template>\n  <IxPaneLayout\n    :variant="variant"\n    :layout="layout"\n    :borderless="variant === \'floating\'"\n  >\n    <IxPane heading="Pane Left" slot="left" size="33%">\n      <p>This is the left pane.</p>\n    </IxPane>\n    <IxPane heading="Pane Top" slot="top" size="33%">\n      <p>This is the top pane.</p>\n    </IxPane>\n    <IxPane heading="Pane Right" slot="right" size="33%">\n      <p>This is the right pane.</p>\n    </IxPane>\n    <IxPane heading="Pane Bottom" slot="bottom" size="33%">\n      <p>This is the bottom pane.</p>\n    </IxPane>\n\n    <div slot="content">\n      <IxButton\n        @click="\n          () => {\n            variant = variant === \'inline\' ? \'floating\' : \'inline\';\n          }\n        "\n        style="margin: 2.5rem"\n      >\n        Toggle Variant\n      </IxButton>\n      <IxButton\n        @click="\n          () => {\n            layout =\n              layout === \'full-horizontal\'\n                ? \'full-vertical\'\n                : \'full-horizontal\';\n          }\n        "\n        style="margin: 2.5rem"\n      >\n        Toggle Layout\n      </IxButton>\n    </div>\n  </IxPaneLayout>\n</template>\n'})})}function B(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(E,{...e})}):E(e)}function L(e){const n={code:"code",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-html",children:'<!DOCTYPE html>\n<html lang="en">\n  <head>\n    <meta charset="UTF-8" />\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n    <title>Pane layout example</title>\n  </head>\n  <body>\n    <ix-pane-layout\n      id="pane-layout"\n      variant="floating"\n      layout="full-horizontal"\n      borderless\n    >\n      <ix-pane heading="Pane Left" slot="left" size="33%">\n        <p>This is the left pane.</p>\n      </ix-pane>\n      <ix-pane heading="Pane Top" slot="top" size="33%">\n        <p>This is the top pane.</p>\n      </ix-pane>\n      <ix-pane heading="Pane Right" slot="right" size="33%">\n        <p>This is the right pane.</p>\n      </ix-pane>\n      <ix-pane heading="Pane Bottom" slot="bottom" size="33%">\n        <p>This is the bottom pane.</p>\n      </ix-pane>\n\n      <div slot="content">\n        <ix-button id="toggle-variant" style="margin: 2.5rem">\n          Toggle Variant\n        </ix-button>\n        <ix-button id="toggle-layout" style="margin: 2.5rem">\n          Toggle Layout\n        </ix-button>\n      </div>\n    </ix-pane-layout>\n\n    <script>\n      const paneLayout = document.getElementById(\'pane-layout\');\n      const buttonVariant = document.getElementById(\'toggle-variant\');\n      const buttonLayout = document.getElementById(\'toggle-layout\');\n\n      buttonVariant.addEventListener(\'click\', () => {\n        const isInline = paneLayout.variant === \'inline\';\n\n        paneLayout.variant = isInline ? \'floating\' : \'inline\';\n        paneLayout.borderless = isInline;\n      });\n      buttonLayout.addEventListener(\'click\', () => {\n        paneLayout.layout =\n          paneLayout.layout === \'full-horizontal\'\n            ? \'full-vertical\'\n            : \'full-horizontal\';\n      });\n    <\/script>\n    <script type="module" src="./init.js"><\/script>\n  </body>\n</html>\n'})})}function N(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(L,{...e})}):L(e)}function S(e){return(0,i.jsx)(u.A,{name:"pane-layout",source:{react:{"pane-layout.tsx":I},angular:{"pane-layout.ts":z,"pane-layout.html":R},vue:{"pane-layout.vue":B},html:{"pane-layout.html":N}},files:{react:{"pane-layout.tsx":"react/pane-layout.tsx"},angular:{"pane-layout.ts":"angular/pane-layout.ts","pane-layout.html":"angular/pane-layout.html"},vue:{"pane-layout.vue":"vue/pane-layout.vue"},html:{"pane-layout.html":"html/pane-layout.html"}},height:e.height,onlyFramework:e.onlyFramework})}function H(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(S,{...e})}):S(e)}const _={},F=void 0,U={},M=[{value:"Development",id:"development",level:2},{value:"Basic",id:"basic",level:3},{value:"Pane Layout",id:"pane-layout",level:3},{value:"API for ix-pane",id:"api-for-ix-pane",level:3},{value:"Properties",id:"properties",level:4},{value:"Events",id:"events",level:4},{value:"API for ix-pane-layout",id:"api-for-ix-pane-layout",level:3},{value:"Properties",id:"properties",level:4}];function W(e){const n={h2:"h2",h3:"h3",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,i.jsx)(n.h3,{id:"basic",children:"Basic"}),"\n",(0,i.jsx)(P,{height:"24rem"}),"\n",(0,i.jsx)(n.h3,{id:"pane-layout",children:"Pane Layout"}),"\n",(0,i.jsx)(H,{height:"24rem"}),"\n",(0,i.jsx)(l,{}),"\n",(0,i.jsx)(p,{})]})}function O(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(W,{...e})}):W(e)}},22616:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"components/panes/guide","title":"guide","description":"Guidelines","source":"@site/docs/components/panes/guide.md","sourceDirName":"components/panes","slug":"/components/panes/guide","permalink":"/version-alpha/docs/components/panes/guide","draft":false,"unlisted":false,"editUrl":"https://github.com/siemens/ix/tree/main/packages/documentation/docs/components/panes/guide.md","tags":[],"version":"current","frontMatter":{}}');var i=t(65723),o=t(65598);const s={},r=void 0,l={},d=[{value:"Guidelines",id:"guidelines",level:2},{value:"Options",id:"options",level:3},{value:"Behavior",id:"behavior",level:3},{value:"States",id:"states",level:3},{value:"Dos and Don&#39;ts",id:"dos-and-donts",level:3},{value:"Related patterns",id:"related-patterns",level:3}];function c(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"guidelines",children:"Guidelines"}),"\n",(0,i.jsx)(n.p,{children:"Panes have a header and a content area. When collapsed, panes are either hidden or reduced to a bar. In our applications, we often include contextual information, options, trees and lists inside panes."}),"\n",(0,i.jsx)(n.p,{children:"Panes help users focus on tasks as related controls are visually grouped and the main content has less information. They are also beneficial for compact and hierarchically organized content and provide a more dynamic layout."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"/version-alpha/figma/wEptRgAezDU1z80Cn3eZ0o_1680_22044.png",alt:"Pane overview"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Left pane, inline"}),"\n",(0,i.jsx)(n.li,{children:"Top pane, inline"}),"\n",(0,i.jsx)(n.li,{children:"Right pane, floating"}),"\n",(0,i.jsx)(n.li,{children:"Bottom pane, inline"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"options",children:"Options"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Heading"}),": Set a headline for the pane (we normally use a short content description)."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Icon"}),": Panes can display an icon in the pane header next to the title."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Composition"}),': Panes can be positioned on the left, top, right or bottom. We often use left panes for structuring components like trees or lists, and right panes for contextual information. Top and bottom panes are less common in our applications, but can help communicate a clear "top to bottom" hierarchy.']}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Size"}),": Sizes can be picked either as a fixed size (in pixels) or as a relative size (in percentage) depending on the intended layout. However, picking sizes only applies to medium and large screens as small screen panes are always displayed in full screen (see responsiveness below for more information). We usually choose a pane width and height that avoids the need for scrolling in our applications."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Borderless"}),": Panes can have borders to visually split them from other content areas. We typically use borderless panes when placed within layouts that already have other visual means to split areas."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hide on collapse"}),": Define whether a pane is visible in its collapsed state. If it is visible, it has a bar appearance when collapsed that contains both the title and the expand button. We usually use inline panes with a collapsible option and floating panes without since they are triggered from a dedicated control like a button or a list item."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Variant"}),": When used within a layout, floating panes are placed above (z-axis) the main content but below the navigation menu and header. When expanded, they cover a part of the main content. Inline panes are placed on one level with the main content. When expanded, they move the main content and reduce its available space."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Layout"}),": Depending on which pane needs more focus, the top/bottom or left/right panes can use more space."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"/version-alpha/figma/wEptRgAezDU1z80Cn3eZ0o_1681_28910.png",alt:"Pane layouts"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Full height (left/right)"}),"\n",(0,i.jsx)(n.li,{children:"Full width (top/bottom)"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"behavior",children:"Behavior"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Interaction"}),": Users expand panes that are collapsible by pressing on the expand button. To expand panes with hidden collapsed state, users typically click on a button or another interactive component within the main content. They close these panes by either pressing on the button on the right side of the header or clicking outside the pane area. This removes the pane from their view."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Overflow"}),": When content extends the available space within the pane, scrollbars appear. Headers stay fixed at the top allowing users to scroll the content area. We like to avoid overfilling panes with content to remove the need for scrolling."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Stacking"}),": When users expand multiple panes within a pane layout, panes are stacked."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Placement"}),": We typically fit a pane layout within the complete content area of a page bounded by the application header on top and the navigation menu on the left."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Responsiveness"}),": On large and medium size screens, all panes have a maximum width or height of ",(0,i.jsx)(n.code,{children:"50%"})," of the available space. On small screens, all panes have full width and expand to full height, but the header and navigation menu remain visible. We show collapsed left and right panes on the top and bottom for a more efficient use of space."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{src:"/version-alpha/figma/wEptRgAezDU1z80Cn3eZ0o_1680_26548.png",alt:"Pane small viewport"})}),"\n",(0,i.jsxs)(n.ol,{children:["\n",(0,i.jsx)(n.li,{children:"Inline panes in collapsed state"}),"\n",(0,i.jsx)(n.li,{children:"Inline or floating pane in expanded state"}),"\n",(0,i.jsx)(n.li,{children:"Opened navigation menu"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"states",children:"States"}),"\n",(0,i.jsx)(n.p,{children:"Panes have two states: collapsed and expanded. The appearance of the states varies between variants and screen sizes."}),"\n",(0,i.jsx)(n.h3,{id:"dos-and-donts",children:"Dos and Don'ts"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Do use panes to organize your content and guide your users' attention"}),"\n",(0,i.jsx)(n.li,{children:"Do use panes to display different views within a single screen"}),"\n",(0,i.jsx)(n.li,{children:"Do use panes to expand/collapse content or hide/reveal content"}),"\n",(0,i.jsx)(n.li,{children:"Don't use panes for a small amount of content"}),"\n",(0,i.jsx)(n.li,{children:"Don't use panes for content that should stay visible"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"related-patterns",children:"Related patterns"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"../drawer",children:"Drawers"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"../application-header",children:"Header"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"../application-menu",children:"Menu"})}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},5603:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>x,frontMatter:()=>d,metadata:()=>a,toc:()=>h});const a=JSON.parse('{"id":"components/panes/index","title":"Panes","description":"Panes are interactive components that allow users to access content that isn&#39;t constantly visible on the screen.","source":"@site/docs/components/panes/index.mdx","sourceDirName":"components/panes","slug":"/components/panes/","permalink":"/version-alpha/docs/components/panes/","draft":false,"unlisted":false,"editUrl":"https://github.com/siemens/ix/tree/main/packages/documentation/docs/components/panes/index.mdx","tags":[],"version":"current","frontMatter":{"doc-type":"component","component-tabs":["Usage","Code"],"description":"Panes are interactive components that allow users to access content that isn&#39;t constantly visible on the screen.","title":"Panes","deprecated":null,"toc_min_heading_level":2,"toc_max_heading_level":5},"sidebar":"components","previous":{"title":"Modal","permalink":"/version-alpha/docs/components/modal/"},"next":{"title":"Tile","permalink":"/version-alpha/docs/components/tile/"}}');var i=t(65723),o=t(65598),s=t(22616),r=t(53980),l=t(43640);const d={"doc-type":"component","component-tabs":["Usage","Code"],description:"Panes are interactive components that allow users to access content that isn&#39;t constantly visible on the screen.",title:"Panes",deprecated:null,toc_min_heading_level:2,toc_max_heading_level:5},c="",p={},h=[...s.toc,...r.toc];function u(e){const n={h1:"h1",header:"header",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:""})}),"\n",(0,i.jsxs)(l.A,{children:[(0,i.jsx)(s.default,{}),(0,i.jsx)(r.default,{})]})]})}function x(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},62029:(e,n,t)=>{t.d(n,{_:()=>r,u:()=>l});var a=t(22155),i=t(94931),o=t(65723);const s=a.createContext(null);function r(e){let{children:n,content:t}=e;const i=function(e){return(0,a.useMemo)((()=>({metadata:e.metadata,frontMatter:e.frontMatter,assets:e.assets,contentTitle:e.contentTitle,toc:e.toc})),[e])}(t);return(0,o.jsx)(s.Provider,{value:i,children:n})}function l(){const e=(0,a.useContext)(s);if(null===e)throw new i.dV("DocProvider");return e}},61838:(e,n,t)=>{t.d(n,{b:()=>u,A:()=>h});var a=t(68643),i=t(35478),o=t(51038),s=t(17787);const r={AnchorButton:"AnchorButton_X7SC",AnchorHeader:"AnchorHeader_kjZv",NoButtonBorder:"NoButtonBorder_Hb7W",ApiTableText:"ApiTableText_hDT2"};var l=t(65723);function d(e){let{children:n,id:t}=e;return(0,l.jsx)(a.A,{children:()=>(0,l.jsx)("div",{className:"api-table container ml-0 mb-8",id:t,children:(0,l.jsx)("div",{className:"bg-[transparent] rounded-lg overflow-hidden border-solid border-[1px] border-[var(--theme-color-soft-bdr)]",children:n})})})}function c(e){let{children:n,name:t,type:a,singleFramework:o}=e;const{framework:r}=(0,i.u)();let d=t;return"vue"!==r&&"angular"!==r&&"html"!==r||(d=t.split("").map(((e,n)=>e.toUpperCase()===e?`${0!==n?"-":""}${e.toLowerCase()}`:e)).join("")),(0,l.jsxs)("div",{className:"flex bg-[var(--theme-color-2)] text-[var(--theme-color-std-text)] p-4 border-solid border-0 border-b border-[var(--theme-color-soft-bdr)] anchor",children:[(0,l.jsxs)("div",{className:"flex items-center font-bold",children:[d,(0,l.jsx)("a",{href:`#${a??"property"}-${t}`,className:"hash-link","aria-label":`Direct link to ${t}`,title:`Direct link to ${t}`})]}),(0,l.jsxs)("div",{className:"flex items-center ml-auto gap-2",children:[n,o?"":(0,l.jsx)(s.A,{})]})]})}function p(e){let{children:n,name:t}=e;return(0,l.jsxs)("div",{className:r.ApiTableText,children:[(0,l.jsx)("div",{className:"px-8 py-4 font-bold w-auto border-solid border-0 border-r border-[var(--theme-color-soft-bdr)]",children:t}),(0,l.jsx)("div",{className:"w-auto p-4",children:n})]})}d.PropertyHeader=c,d.EventHeader=function(e){let{children:n,name:t}=e;const{framework:a}=(0,i.u)();let o=t;return"react"===a&&(o=`on${t.charAt(0).toUpperCase()}${t.slice(1)}`),(0,l.jsx)(c,{name:o,type:"event",children:n})},d.SlotHeader=function(e){let{children:n,name:t}=e;return(0,l.jsx)(c,{name:t,type:"slot",children:n})},d.Text=p,d.Code=function(e){let{children:n,name:t}=e;return(0,l.jsx)(p,{name:t,children:(0,l.jsx)("code",{className:"p-1",children:n})})};const h=d;function u(e){let{children:n,right:t,anchorName:a,anchorLabel:i,noBottomBorder:s,onClick:d}=e;return(0,l.jsxs)("div",{className:(0,o.A)(r.AnchorHeader,{[r.NoButtonBorder]:s}),children:[(0,l.jsx)("div",{className:"flex items-center font-bold w-full",children:(0,l.jsxs)("button",{onClick:d,className:(0,o.A)("all-unset",r.AnchorButton),tabIndex:0,children:[n,(0,l.jsx)("a",{href:`#${a}`,className:"hash-link","aria-label":i,title:i})]})}),(0,l.jsx)("div",{className:"flex items-center ml-auto gap-2",children:t})]})}},34197:(e,n,t)=>{t.d(n,{k$:()=>r,PI:()=>p,df:()=>s});const a={Tag:"Tag_JPbC",Since:"Since_Ybno",FormReady:"FormReady_rKLF",Deprecated:"Deprecated_M0Gf",Redirect:"Redirect_eyq7",Link:"Link_YkBF"};var i=t(65723);function o(e){let{children:n}=e;return(0,i.jsx)("div",{className:a.Tag,children:n})}function s(e){let{message:n}=e;return(0,i.jsx)(o,{children:(0,i.jsxs)("div",{className:a.Since,children:["Since ",n]})})}function r(e){let{message:n}=e;return(0,i.jsx)(o,{children:(0,i.jsxs)("div",{className:a.Deprecated,children:["Deprecated ",n]})})}var l=t(22155),d=t(52961),c=t(51038);function p(e){let{link:n,children:t}=e;return(0,i.jsx)(o,{children:(0,i.jsxs)("div",{className:(0,c.A)(a.Redirect),children:[l.createElement("ix-icon",{name:d.B7e,color:"color-primary",size:"16"}),(0,i.jsx)("a",{href:n,target:"_blank",rel:"noreferrer",className:a.Link,children:t})]})})}},43640:(e,n,t)=>{t.d(n,{A:()=>l,M:()=>r});var a=t(62029),i=t(62934),o=t(22155),s=t(65723);function r(){const{metadata:e}=(0,a.u)(),n=(0,i.zy)(),[t,s]=(0,o.useState)(null),[r,l]=(0,o.useState)(null),[d,c]=(0,o.useState)(null),[p,h]=(0,o.useState)(0),[u]=(0,o.useState)(new URLSearchParams(n.search));return(0,o.useEffect)((()=>{const t=e.frontMatter["component-tabs"],a=new URLSearchParams(n.search),i=a.has("current-tabs"),o=a.get("current-tabs");l(t),c(o),s(i)}),[n,n.search,e]),(0,o.useEffect)((()=>{if(null===t||!r)return void h(-1);const e=r.findIndex((e=>e===d));h(e)}),[t,r,h,d]),{componentTabs:r,searchParams:u,hasQueryString:t,currentTab:d,currentIndex:p}}function l(e){const{componentTabs:n,hasQueryString:t,currentTab:a}=r(),[i,l]=(0,o.useState)((()=>Array.isArray(e.children)?e.children[0]:e.children));return(0,o.useEffect)((()=>{if(!n)return;const t=n.findIndex((e=>e===a));Array.isArray(e.children)?l(e.children[t]):l(e.children)}),[n,e.children]),(0,s.jsx)("div",{children:i})}}}]);