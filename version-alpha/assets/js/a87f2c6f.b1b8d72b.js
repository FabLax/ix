"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[4346],{76113:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>J,contentTitle:()=>_,default:()=>Q,frontMatter:()=>B,metadata:()=>o,toc:()=>H});const o=JSON.parse('{"id":"components/special-chart/code","title":"code","description":"Development","source":"@site/docs/components/special-chart/code.mdx","sourceDirName":"components/special-chart","slug":"/components/special-chart/code","permalink":"/version-alpha/docs/components/special-chart/code","draft":false,"unlisted":false,"editUrl":"https://github.com/siemens/ix/tree/main/packages/documentation/docs/components/special-chart/code.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1}}');var s=t(65723),r=t(65598),a=t(89403);function c(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import './echarts-special-toolbox.scoped.css';\n\nimport { useEffect, useState } from 'react';\nimport { registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport ReactEcharts from 'echarts-for-react';\nimport * as echarts from 'echarts/core';\nimport { EChartsOption } from 'echarts';\n\nexport default function EchartsSpecialToolbox() {\n  registerTheme(echarts);\n\n  const [theme, setTheme] = useState(themeSwitcher.getCurrentTheme());\n\n  useEffect(() => {\n    themeSwitcher.themeChanged.on((theme: string) => {\n      setTheme(theme);\n    });\n  }, []);\n\n  const data = {\n    months: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    values: [150, 230, 224, 218, 135, 147, 260],\n  };\n\n  const options: EChartsOption = {\n    toolbox: {\n      feature: {\n        dataZoom: {\n          yAxisIndex: 'none',\n        },\n        restore: {},\n        saveAsImage: {},\n        magicType: {\n          type: ['line', 'bar'],\n        },\n        dataView: {\n          show: true,\n        },\n      },\n    },\n    xAxis: {\n      type: 'category',\n      data: data.months,\n    },\n    yAxis: {\n      type: 'value',\n    },\n    series: [\n      {\n        data: data.values,\n        type: 'line',\n        step: 'end',\n      },\n    ],\n  };\n\n  return (\n    <ReactEcharts\n      style={{ height: '40rem' }}\n      option={options}\n      theme={theme}\n      className=\"echarts\"\n    />\n  );\n}\n"})})}function i(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}function h(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}function m(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { Component, OnInit } from '@angular/core';\nimport { registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport * as echarts from 'echarts/core';\nimport { EChartsOption } from 'echarts';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './echarts-special-toolbox.html',\n  styleUrls: ['./echarts-special-toolbox.css'],\n})\nexport default class EchartsSpecialToolbox implements OnInit {\n  theme = themeSwitcher.getCurrentTheme();\n\n  options: EChartsOption = {\n    toolbox: {\n      feature: {\n        dataZoom: {\n          yAxisIndex: 'none',\n        },\n        restore: {},\n        saveAsImage: {},\n        magicType: {\n          type: ['line', 'bar'],\n        },\n        dataView: {\n          show: true,\n          title: '123',\n        },\n      },\n    },\n    xAxis: {\n      type: 'category',\n      data: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    },\n    yAxis: {\n      type: 'value',\n    },\n    series: [\n      {\n        data: [150, 230, 224, 218, 135, 147, 260],\n        type: 'line',\n      },\n    ],\n  };\n\n  ngOnInit() {\n    registerTheme(echarts);\n\n    themeSwitcher.themeChanged.on((theme: string) => {\n      this.theme = theme;\n    });\n  }\n}\n"})})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(m,{...e})}):m(e)}function d(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<div\n  echarts\n  [options]="options"\n  [theme]="theme"\n  class="echarts"\n></div>\n'})})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}function x(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function g(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(x,{...e})}):x(e)}function f(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-vue",children:"<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport { registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport VueECharts from 'vue-echarts';\nimport * as echarts from 'echarts/core';\nimport * as charts from 'echarts/charts';\nimport * as components from 'echarts/components';\nimport * as renderer from 'echarts/renderers';\nimport { EChartsOption } from 'echarts';\n\necharts.use([\n  components.TooltipComponent,\n  components.LegendComponent,\n  components.GridComponent,\n  components.MarkLineComponent,\n  components.ToolboxComponent,\n  charts.LineChart,\n  renderer.CanvasRenderer,\n]);\n\nregisterTheme(echarts);\n\nconst theme = ref(themeSwitcher.getCurrentTheme());\n\nthemeSwitcher.themeChanged.on((newTheme: string) => {\n  theme.value = newTheme;\n});\n\nconst data = {\n  months: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n  values: [150, 230, 224, 218, 135, 147, 260],\n};\n\nconst options = {\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n      },\n      restore: {},\n      saveAsImage: {},\n      magicType: {\n        type: ['line', 'bar'],\n      },\n      dataView: {\n        show: true,\n      },\n    },\n  },\n  xAxis: {\n    type: 'category',\n    data: data.months,\n  },\n  yAxis: {\n    type: 'value',\n  },\n  series: [\n    {\n      data: data.values,\n      type: 'line',\n      step: 'end',\n    },\n  ],\n} as EChartsOption;\n<\/script>\n\n<style scoped src=\"./echarts-special-toolbox.css\"></style>\n\n<template>\n  <VueECharts :theme=\"theme\" :option=\"options\" autoresize></VueECharts>\n</template>\n"})})}function y(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(f,{...e})}):f(e)}function w(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function v(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(w,{...e})}):w(e)}function b(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ECharts special toolbox example</title>\n    <link rel=\"stylesheet\" href=\"./echarts-special-toolbox.css\" />\n    \n    <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.4.1/dist/echarts.min.js\"><\/script>\n    \n  </head>\n  <body class=\"theme-classic-dark\">\n    <div id=\"main\" class=\"echarts\"></div>\n\n    <script type=\"module\">\n      import { registerTheme } from '@siemens/ix-echarts';\n      import { themeSwitcher } from '@siemens/ix';\n\n      const data = {\n        months: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n        values: [150, 230, 224, 218, 135, 147, 260],\n      };\n\n      function initChart(theme, options) {\n        var myChart = echarts.init(document.querySelector('#main'), theme);\n        myChart.setOption(options);\n\n        return myChart;\n      }\n\n      const options = {\n        toolbox: {\n          feature: {\n            dataZoom: {\n              yAxisIndex: 'none',\n            },\n            restore: {},\n            saveAsImage: {},\n            magicType: {\n              type: ['line', 'bar'],\n            },\n            dataView: {\n              show: true,\n            },\n          },\n        },\n        xAxis: {\n          type: 'category',\n          data: data.months,\n        },\n        yAxis: {\n          type: 'value',\n        },\n        series: [\n          {\n            data: data.values,\n            type: 'line',\n            step: 'end',\n          },\n        ],\n      };\n\n      // providing echarts is in this case optional\n      registerTheme(echarts);\n\n      var myChart = initChart(themeSwitcher.getCurrentTheme(), options);\n\n      themeSwitcher.themeChanged.on((theme) => {\n        myChart.dispose();\n        myChart = initChart(theme, options);\n      });\n\n      window.onresize = function () {\n        myChart.resize();\n      };\n    <\/script>\n\n    <script type=\"module\" src=\"./init.js\"><\/script>\n  </body>\n</html>\n"})})}function j(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(b,{...e})}):b(e)}function C(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function S(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(C,{...e})}):C(e)}function T(e){return(0,s.jsx)(a.A,{name:"echarts-special-toolbox",source:{react:{"echarts-special-toolbox.tsx":i,"echarts-special-toolbox.scoped.css":p},angular:{"echarts-special-toolbox.ts":l,"echarts-special-toolbox.html":u,"echarts-special-toolbox.css":g},vue:{"echarts-special-toolbox.vue":y,"echarts-special-toolbox.css":v},html:{"echarts-special-toolbox.html":j,"echarts-special-toolbox.css":S}},files:{react:{"echarts-special-toolbox.tsx":"react/echarts-special-toolbox.tsx","echarts-special-toolbox.scoped.css":"react/echarts-special-toolbox.scoped.css"},angular:{"echarts-special-toolbox.ts":"angular/echarts-special-toolbox.ts","echarts-special-toolbox.html":"angular/echarts-special-toolbox.html","echarts-special-toolbox.css":"angular/echarts-special-toolbox.css"},vue:{"echarts-special-toolbox.vue":"vue/echarts-special-toolbox.vue","echarts-special-toolbox.css":"vue/echarts-special-toolbox.css"},html:{"echarts-special-toolbox.html":"html/echarts-special-toolbox.html","echarts-special-toolbox.css":"html/echarts-special-toolbox.css"}},height:e.height,onlyFramework:e.onlyFramework})}function z(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(T,{...e})}):T(e)}function R(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-tsx",children:"import './echarts-special-zoom.scoped.css';\n\nimport { useEffect, useState } from 'react';\nimport { getComputedCSSProperty, registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport ReactEcharts from 'echarts-for-react';\nimport * as echarts from 'echarts/core';\nimport { EChartsOption } from 'echarts';\n\nexport default function EchartsSpecialZoom() {\n  registerTheme(echarts);\n\n  const [theme, setTheme] = useState(themeSwitcher.getCurrentTheme());\n\n  useEffect(() => {\n    themeSwitcher.themeChanged.on((theme: string) => {\n      setTheme(theme);\n    });\n  }, []);\n\n  //create some random data\n  let base = +new Date(1968, 9, 3);\n  const oneDay = 24 * 3600 * 1000;\n  const date: (string | number)[] = [];\n\n  const data: number[] = [0];\n\n  function generateData(): void {\n    for (let i = 1; i < 20000; i++) {\n      const now = new Date((base += oneDay));\n      date.push(`${now.getFullYear()}/${now.getMonth() + 1}/${now.getDate()}`);\n      data.push(Math.round((Math.random() - 0.5) * 20 + data[i - 1]));\n    }\n  }\n\n  generateData();\n\n  const options: EChartsOption = {\n    toolbox: {\n      feature: {\n        dataZoom: {\n          yAxisIndex: 'none',\n        },\n      },\n    },\n    xAxis: {\n      type: 'category',\n      boundaryGap: false,\n      data: date,\n    },\n    yAxis: {\n      type: 'value',\n      boundaryGap: [0, '100%'],\n    },\n    dataZoom: [\n      {\n        type: 'inside',\n        start: 0,\n        end: 10,\n      },\n      {\n        start: 0,\n        end: 10,\n      },\n    ],\n    series: [\n      {\n        name: 'Synthetic data',\n        type: 'line',\n        symbol: 'none',\n        sampling: 'lttb',\n        areaStyle: {\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            {\n              offset: 0,\n              color: getComputedCSSProperty('color-primary'),\n            },\n            {\n              offset: 1,\n              color: 'transparent',\n            },\n          ]),\n        },\n        data: data,\n      },\n    ],\n  };\n\n  return (\n    <ReactEcharts\n      style={{ height: '40rem' }}\n      option={options}\n      theme={theme}\n      className=\"echarts\"\n    />\n  );\n}\n"})})}function E(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(R,{...e})}):R(e)}function A(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function D(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(A,{...e})}):A(e)}function O(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-ts",children:"import { Component, OnInit } from '@angular/core';\nimport { registerTheme, getComputedCSSProperty } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport * as echarts from 'echarts/core';\nimport { EChartsOption } from 'echarts';\n\n@Component({\n  selector: 'app-example',\n  templateUrl: './echarts-special-zoom.html',\n  styleUrls: ['./echarts-special-zoom.css'],\n})\nexport default class EchartsSpecialZoom implements OnInit {\n  theme = themeSwitcher.getCurrentTheme();\n\n  //create some random data\n  private base = +new Date(1968, 9, 3);\n  private oneDay = 24 * 3600 * 1000;\n  private date: (string | number)[] = [];\n\n  data: number[] = [0];\n\n  options: EChartsOption = {\n    toolbox: {\n      feature: {\n        dataZoom: {\n          yAxisIndex: 'none',\n        },\n      },\n    },\n    xAxis: {\n      type: 'category',\n      boundaryGap: false,\n      data: this.date,\n    },\n    yAxis: {\n      type: 'value',\n      boundaryGap: [0, '100%'],\n    },\n    dataZoom: [\n      {\n        type: 'inside',\n        start: 0,\n        end: 10,\n      },\n      {\n        start: 0,\n        end: 10,\n      },\n    ],\n    series: [\n      {\n        name: 'Synthetic data',\n        type: 'line',\n        symbol: 'none',\n        sampling: 'lttb',\n        areaStyle: {\n          color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n            {\n              offset: 0,\n              color: getComputedCSSProperty('color-primary'),\n            },\n            {\n              offset: 1,\n              color: 'transparent',\n            },\n          ]),\n        },\n        data: this.data,\n      },\n    ],\n  };\n\n  generateData(): void {\n    for (let i = 1; i < 20000; i++) {\n      const now = new Date((this.base += this.oneDay));\n      this.date.push(\n        `${now.getFullYear()}/${now.getMonth() + 1}/${now.getDate()}`\n      );\n      this.data.push(Math.round((Math.random() - 0.5) * 20 + this.data[i - 1]));\n    }\n  }\n\n  ngOnInit() {\n    this.generateData();\n\n    registerTheme(echarts);\n\n    themeSwitcher.themeChanged.on((theme: string) => {\n      this.theme = theme;\n    });\n  }\n}\n"})})}function I(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(O,{...e})}):O(e)}function N(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:'<div\n  echarts\n  [options]="options"\n  [theme]="theme"\n  class="echarts"\n></div>\n'})})}function M(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(N,{...e})}):N(e)}function k(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function F(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(k,{...e})}):k(e)}function Z(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-vue",children:"<script setup lang=\"ts\">\nimport { ref } from 'vue';\nimport { getComputedCSSProperty, registerTheme } from '@siemens/ix-echarts';\nimport { themeSwitcher } from '@siemens/ix';\nimport VueECharts from 'vue-echarts';\nimport * as echarts from 'echarts/core';\nimport * as charts from 'echarts/charts';\nimport * as components from 'echarts/components';\nimport * as renderer from 'echarts/renderers';\nimport { EChartsOption } from 'echarts';\n\necharts.use([\n  components.TooltipComponent,\n  components.LegendComponent,\n  components.GridComponent,\n  components.MarkLineComponent,\n  components.DataZoomComponent,\n  components.ToolboxComponent,\n  charts.LineChart,\n  renderer.CanvasRenderer,\n]);\n\nregisterTheme(echarts);\n\nconst theme = ref(themeSwitcher.getCurrentTheme());\n\nthemeSwitcher.themeChanged.on((newTheme: string) => {\n  theme.value = newTheme;\n});\n\n//create some random data\nlet base = +new Date(1968, 9, 3);\nconst oneDay = 24 * 3600 * 1000;\nconst date: (string | number)[] = [];\n\nconst data: number[] = [0];\n\nfunction generateData(): void {\n  for (let i = 1; i < 20000; i++) {\n    const now = new Date((base += oneDay));\n    date.push(`${now.getFullYear()}/${now.getMonth() + 1}/${now.getDate()}`);\n    data.push(Math.round((Math.random() - 0.5) * 20 + data[i - 1]));\n  }\n}\n\ngenerateData();\n\nconst options: EChartsOption = {\n  toolbox: {\n    feature: {\n      dataZoom: {\n        yAxisIndex: 'none',\n      },\n    },\n  },\n  xAxis: {\n    type: 'category',\n    boundaryGap: false,\n    data: date,\n  },\n  yAxis: {\n    type: 'value',\n    boundaryGap: [0, '100%'],\n  },\n  dataZoom: [\n    {\n      type: 'inside',\n      start: 0,\n      end: 10,\n    },\n    {\n      start: 0,\n      end: 10,\n    },\n  ],\n  series: [\n    {\n      name: 'Synthetic data',\n      type: 'line',\n      symbol: 'none',\n      sampling: 'lttb',\n      areaStyle: {\n        color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n          {\n            offset: 0,\n            color: getComputedCSSProperty('color-primary'),\n          },\n          {\n            offset: 1,\n            color: 'transparent',\n          },\n        ]),\n      },\n      data: data,\n    },\n  ],\n} as EChartsOption;\n<\/script>\n\n<style scoped src=\"./echarts-special-zoom.css\"></style>\n\n<template>\n  <VueECharts :theme=\"theme\" :option=\"options\" autoresize></VueECharts>\n</template>\n"})})}function G(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(Z,{...e})}):Z(e)}function P(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function L(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(P,{...e})}):P(e)}function V(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-html",children:"<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>ECharts special zoom example</title>\n    <link rel=\"stylesheet\" href=\"./echarts-special-zoom.css\" />\n    \n    <script src=\"https://cdn.jsdelivr.net/npm/echarts@5.4.1/dist/echarts.min.js\"><\/script>\n    \n  </head>\n  <body class=\"theme-classic-dark\">\n    <div id=\"main\" class=\"echarts\"></div>\n\n    <script type=\"module\">\n      import {\n        registerTheme,\n        getComputedCSSProperty,\n      } from '@siemens/ix-echarts';\n      import { themeSwitcher } from '@siemens/ix';\n\n      function initChart(theme, options) {\n        var myChart = echarts.init(document.querySelector('#main'), theme);\n        myChart.setOption(options);\n\n        return myChart;\n      }\n\n      //create some random data\n      let base = +new Date(1968, 9, 3);\n      let oneDay = 24 * 3600 * 1000;\n      let date = [];\n\n      let data = [Math.random() * 300];\n\n      for (let i = 1; i < 20000; i++) {\n        var now = new Date((base += oneDay));\n        date.push(\n          [now.getFullYear(), now.getMonth() + 1, now.getDate()].join('/')\n        );\n        data.push(Math.round((Math.random() - 0.5) * 20 + data[i - 1]));\n      }\n\n      const options = {\n        toolbox: {\n          feature: {\n            dataZoom: {\n              yAxisIndex: 'none',\n            },\n          },\n        },\n        xAxis: {\n          type: 'category',\n          boundaryGap: false,\n          data: date,\n        },\n        yAxis: {\n          type: 'value',\n          boundaryGap: [0, '100%'],\n        },\n        dataZoom: [\n          {\n            type: 'inside',\n            start: 0,\n            end: 10,\n          },\n          {\n            start: 0,\n            end: 10,\n          },\n        ],\n        series: [\n          {\n            name: 'Synthetic data',\n            type: 'line',\n            symbol: 'none',\n            sampling: 'lttb',\n            areaStyle: {\n              color: new echarts.graphic.LinearGradient(0, 0, 0, 1, [\n                {\n                  offset: 0,\n                  color: getComputedCSSProperty('color-primary'),\n                },\n                {\n                  offset: 1,\n                  color: 'transparent',\n                },\n              ]),\n            },\n            data: data,\n          },\n        ],\n      };\n\n      // providing echarts is in this case optional\n      registerTheme(echarts);\n\n      var myChart = initChart(themeSwitcher.getCurrentTheme(), options);\n\n      themeSwitcher.themeChanged.on((theme) => {\n        myChart.dispose();\n        myChart = initChart(theme, options);\n      });\n\n      window.onresize = function () {\n        myChart.resize();\n      };\n    <\/script>\n\n    <script type=\"module\" src=\"./init.js\"><\/script>\n  </body>\n</html>\n"})})}function $(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(V,{...e})}):V(e)}function U(e){const n={code:"code",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-css",children:".echarts {\n  position: relative;\n  width: 100%;\n  height: 40rem;\n  padding-top: 1rem;\n}\n"})})}function Y(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(U,{...e})}):U(e)}function W(e){return(0,s.jsx)(a.A,{name:"echarts-special-zoom",source:{react:{"echarts-special-zoom.tsx":E,"echarts-special-zoom.scoped.css":D},angular:{"echarts-special-zoom.ts":I,"echarts-special-zoom.html":M,"echarts-special-zoom.css":F},vue:{"echarts-special-zoom.vue":G,"echarts-special-zoom.css":L},html:{"echarts-special-zoom.html":$,"echarts-special-zoom.css":Y}},files:{react:{"echarts-special-zoom.tsx":"react/echarts-special-zoom.tsx","echarts-special-zoom.scoped.css":"react/echarts-special-zoom.scoped.css"},angular:{"echarts-special-zoom.ts":"angular/echarts-special-zoom.ts","echarts-special-zoom.html":"angular/echarts-special-zoom.html","echarts-special-zoom.css":"angular/echarts-special-zoom.css"},vue:{"echarts-special-zoom.vue":"vue/echarts-special-zoom.vue","echarts-special-zoom.css":"vue/echarts-special-zoom.css"},html:{"echarts-special-zoom.html":"html/echarts-special-zoom.html","echarts-special-zoom.css":"html/echarts-special-zoom.css"}},height:e.height,onlyFramework:e.onlyFramework})}function q(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(W,{...e})}):W(e)}const B={sidebar_position:1},_=void 0,J={},H=[{value:"Development",id:"development",level:2},{value:"Interactive toolbox",id:"interactive-toolbox",level:3},{value:"Advanced zoom and pan",id:"advanced-zoom-and-pan",level:3}];function K(e){const n={code:"code",h2:"h2",h3:"h3",p:"p",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"development",children:"Development"}),"\n",(0,s.jsx)(n.h3,{id:"interactive-toolbox",children:"Interactive toolbox"}),"\n",(0,s.jsxs)(n.p,{children:["Apache ECharts offers a versatile toolbox that enables users to interact with and manipulate charts effectively. By default, the toolbox appears in the top right corner of the chart. It includes various interactive tools like download, zoom, zoom reset and restore. Each has been designed to enhance the user experience. You can customize this toolbox using the ",(0,s.jsx)(n.code,{children:"toolbox"})," option within the option object."]}),"\n",(0,s.jsx)(n.p,{children:"Below is an example demonstrating some of the most commonly used tools and how you can configure them."}),"\n",(0,s.jsx)(z,{height:"40rem"}),"\n",(0,s.jsx)(n.h3,{id:"advanced-zoom-and-pan",children:"Advanced zoom and pan"}),"\n",(0,s.jsx)(n.p,{children:"In addition to the toolbox, ECharts provides zoom and pan functionality for a more interactive chart experience.\nUsers can zoom in and out using the mouse wheel, and pan the chart by clicking and dragging. These advanced features offer a seamless way to explore detailed data within the chart."}),"\n",(0,s.jsx)(q,{height:"40rem"})]})}function Q(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(K,{...e})}):K(e)}}}]);